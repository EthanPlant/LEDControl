

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jun 19 20:19:18 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	swtext1,local,class=CONST,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 1.45
    23                           ; Generated 16/11/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F1459 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  0091                     	;# 
    86  0092                     	;# 
    87  0095                     	;# 
    88  0096                     	;# 
    89  0097                     	;# 
    90  0098                     	;# 
    91  0099                     	;# 
    92  009A                     	;# 
    93  009B                     	;# 
    94  009B                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  0111                     	;# 
   103  0112                     	;# 
   104  0113                     	;# 
   105  0114                     	;# 
   106  0115                     	;# 
   107  0116                     	;# 
   108  0117                     	;# 
   109  0118                     	;# 
   110  0119                     	;# 
   111  011D                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  018E                     	;# 
   115  0191                     	;# 
   116  0191                     	;# 
   117  0192                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0194                     	;# 
   121  0195                     	;# 
   122  0196                     	;# 
   123  0197                     	;# 
   124  0199                     	;# 
   125  019A                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019C                     	;# 
   129  019D                     	;# 
   130  019E                     	;# 
   131  019F                     	;# 
   132  020C                     	;# 
   133  020D                     	;# 
   134  0211                     	;# 
   135  0211                     	;# 
   136  0212                     	;# 
   137  0212                     	;# 
   138  0213                     	;# 
   139  0213                     	;# 
   140  0214                     	;# 
   141  0214                     	;# 
   142  0215                     	;# 
   143  0215                     	;# 
   144  0215                     	;# 
   145  0216                     	;# 
   146  0216                     	;# 
   147  0217                     	;# 
   148  0217                     	;# 
   149  0391                     	;# 
   150  0392                     	;# 
   151  0393                     	;# 
   152  0394                     	;# 
   153  0395                     	;# 
   154  0396                     	;# 
   155  039A                     	;# 
   156  039B                     	;# 
   157  0611                     	;# 
   158  0612                     	;# 
   159  0613                     	;# 
   160  0613                     	;# 
   161  0614                     	;# 
   162  0615                     	;# 
   163  0616                     	;# 
   164  0616                     	;# 
   165  0691                     	;# 
   166  0692                     	;# 
   167  0693                     	;# 
   168  0694                     	;# 
   169  0695                     	;# 
   170  0E8E                     	;# 
   171  0E8F                     	;# 
   172  0E90                     	;# 
   173  0E91                     	;# 
   174  0E92                     	;# 
   175  0E93                     	;# 
   176  0E94                     	;# 
   177  0E94                     	;# 
   178  0E95                     	;# 
   179  0E96                     	;# 
   180  0E97                     	;# 
   181  0E98                     	;# 
   182  0E99                     	;# 
   183  0E9A                     	;# 
   184  0E9B                     	;# 
   185  0E9C                     	;# 
   186  0E9D                     	;# 
   187  0E9E                     	;# 
   188  0E9F                     	;# 
   189  0FE4                     	;# 
   190  0FE5                     	;# 
   191  0FE6                     	;# 
   192  0FE7                     	;# 
   193  0FE8                     	;# 
   194  0FE9                     	;# 
   195  0FEA                     	;# 
   196  0FEB                     	;# 
   197  0FED                     	;# 
   198  0FEE                     	;# 
   199  0FEF                     	;# 
   200  0000                     	;# 
   201  0001                     	;# 
   202  0002                     	;# 
   203  0003                     	;# 
   204  0004                     	;# 
   205  0005                     	;# 
   206  0006                     	;# 
   207  0007                     	;# 
   208  0008                     	;# 
   209  0009                     	;# 
   210  000A                     	;# 
   211  000B                     	;# 
   212  000C                     	;# 
   213  000D                     	;# 
   214  000E                     	;# 
   215  0011                     	;# 
   216  0012                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0016                     	;# 
   220  0017                     	;# 
   221  0018                     	;# 
   222  0019                     	;# 
   223  001A                     	;# 
   224  001B                     	;# 
   225  001C                     	;# 
   226  008C                     	;# 
   227  008D                     	;# 
   228  008E                     	;# 
   229  0091                     	;# 
   230  0092                     	;# 
   231  0095                     	;# 
   232  0096                     	;# 
   233  0097                     	;# 
   234  0098                     	;# 
   235  0099                     	;# 
   236  009A                     	;# 
   237  009B                     	;# 
   238  009B                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  009F                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  0111                     	;# 
   247  0112                     	;# 
   248  0113                     	;# 
   249  0114                     	;# 
   250  0115                     	;# 
   251  0116                     	;# 
   252  0117                     	;# 
   253  0118                     	;# 
   254  0119                     	;# 
   255  011D                     	;# 
   256  018C                     	;# 
   257  018D                     	;# 
   258  018E                     	;# 
   259  0191                     	;# 
   260  0191                     	;# 
   261  0192                     	;# 
   262  0193                     	;# 
   263  0193                     	;# 
   264  0194                     	;# 
   265  0195                     	;# 
   266  0196                     	;# 
   267  0197                     	;# 
   268  0199                     	;# 
   269  019A                     	;# 
   270  019B                     	;# 
   271  019B                     	;# 
   272  019C                     	;# 
   273  019D                     	;# 
   274  019E                     	;# 
   275  019F                     	;# 
   276  020C                     	;# 
   277  020D                     	;# 
   278  0211                     	;# 
   279  0211                     	;# 
   280  0212                     	;# 
   281  0212                     	;# 
   282  0213                     	;# 
   283  0213                     	;# 
   284  0214                     	;# 
   285  0214                     	;# 
   286  0215                     	;# 
   287  0215                     	;# 
   288  0215                     	;# 
   289  0216                     	;# 
   290  0216                     	;# 
   291  0217                     	;# 
   292  0217                     	;# 
   293  0391                     	;# 
   294  0392                     	;# 
   295  0393                     	;# 
   296  0394                     	;# 
   297  0395                     	;# 
   298  0396                     	;# 
   299  039A                     	;# 
   300  039B                     	;# 
   301  0611                     	;# 
   302  0612                     	;# 
   303  0613                     	;# 
   304  0613                     	;# 
   305  0614                     	;# 
   306  0615                     	;# 
   307  0616                     	;# 
   308  0616                     	;# 
   309  0691                     	;# 
   310  0692                     	;# 
   311  0693                     	;# 
   312  0694                     	;# 
   313  0695                     	;# 
   314  0E8E                     	;# 
   315  0E8F                     	;# 
   316  0E90                     	;# 
   317  0E91                     	;# 
   318  0E92                     	;# 
   319  0E93                     	;# 
   320  0E94                     	;# 
   321  0E94                     	;# 
   322  0E95                     	;# 
   323  0E96                     	;# 
   324  0E97                     	;# 
   325  0E98                     	;# 
   326  0E99                     	;# 
   327  0E9A                     	;# 
   328  0E9B                     	;# 
   329  0E9C                     	;# 
   330  0E9D                     	;# 
   331  0E9E                     	;# 
   332  0E9F                     	;# 
   333  0FE4                     	;# 
   334  0FE5                     	;# 
   335  0FE6                     	;# 
   336  0FE7                     	;# 
   337  0FE8                     	;# 
   338  0FE9                     	;# 
   339  0FEA                     	;# 
   340  0FEB                     	;# 
   341  0FED                     	;# 
   342  0FEE                     	;# 
   343  0FEF                     	;# 
   344  0000                     	;# 
   345  0001                     	;# 
   346  0002                     	;# 
   347  0003                     	;# 
   348  0004                     	;# 
   349  0005                     	;# 
   350  0006                     	;# 
   351  0007                     	;# 
   352  0008                     	;# 
   353  0009                     	;# 
   354  000A                     	;# 
   355  000B                     	;# 
   356  000C                     	;# 
   357  000D                     	;# 
   358  000E                     	;# 
   359  0011                     	;# 
   360  0012                     	;# 
   361  0015                     	;# 
   362  0016                     	;# 
   363  0016                     	;# 
   364  0017                     	;# 
   365  0018                     	;# 
   366  0019                     	;# 
   367  001A                     	;# 
   368  001B                     	;# 
   369  001C                     	;# 
   370  008C                     	;# 
   371  008D                     	;# 
   372  008E                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009B                     	;# 
   383  009C                     	;# 
   384  009D                     	;# 
   385  009E                     	;# 
   386  009F                     	;# 
   387  010C                     	;# 
   388  010D                     	;# 
   389  010E                     	;# 
   390  0111                     	;# 
   391  0112                     	;# 
   392  0113                     	;# 
   393  0114                     	;# 
   394  0115                     	;# 
   395  0116                     	;# 
   396  0117                     	;# 
   397  0118                     	;# 
   398  0119                     	;# 
   399  011D                     	;# 
   400  018C                     	;# 
   401  018D                     	;# 
   402  018E                     	;# 
   403  0191                     	;# 
   404  0191                     	;# 
   405  0192                     	;# 
   406  0193                     	;# 
   407  0193                     	;# 
   408  0194                     	;# 
   409  0195                     	;# 
   410  0196                     	;# 
   411  0197                     	;# 
   412  0199                     	;# 
   413  019A                     	;# 
   414  019B                     	;# 
   415  019B                     	;# 
   416  019C                     	;# 
   417  019D                     	;# 
   418  019E                     	;# 
   419  019F                     	;# 
   420  020C                     	;# 
   421  020D                     	;# 
   422  0211                     	;# 
   423  0211                     	;# 
   424  0212                     	;# 
   425  0212                     	;# 
   426  0213                     	;# 
   427  0213                     	;# 
   428  0214                     	;# 
   429  0214                     	;# 
   430  0215                     	;# 
   431  0215                     	;# 
   432  0215                     	;# 
   433  0216                     	;# 
   434  0216                     	;# 
   435  0217                     	;# 
   436  0217                     	;# 
   437  0391                     	;# 
   438  0392                     	;# 
   439  0393                     	;# 
   440  0394                     	;# 
   441  0395                     	;# 
   442  0396                     	;# 
   443  039A                     	;# 
   444  039B                     	;# 
   445  0611                     	;# 
   446  0612                     	;# 
   447  0613                     	;# 
   448  0613                     	;# 
   449  0614                     	;# 
   450  0615                     	;# 
   451  0616                     	;# 
   452  0616                     	;# 
   453  0691                     	;# 
   454  0692                     	;# 
   455  0693                     	;# 
   456  0694                     	;# 
   457  0695                     	;# 
   458  0E8E                     	;# 
   459  0E8F                     	;# 
   460  0E90                     	;# 
   461  0E91                     	;# 
   462  0E92                     	;# 
   463  0E93                     	;# 
   464  0E94                     	;# 
   465  0E94                     	;# 
   466  0E95                     	;# 
   467  0E96                     	;# 
   468  0E97                     	;# 
   469  0E98                     	;# 
   470  0E99                     	;# 
   471  0E9A                     	;# 
   472  0E9B                     	;# 
   473  0E9C                     	;# 
   474  0E9D                     	;# 
   475  0E9E                     	;# 
   476  0E9F                     	;# 
   477  0FE4                     	;# 
   478  0FE5                     	;# 
   479  0FE6                     	;# 
   480  0FE7                     	;# 
   481  0FE8                     	;# 
   482  0FE9                     	;# 
   483  0FEA                     	;# 
   484  0FEB                     	;# 
   485  0FED                     	;# 
   486  0FEE                     	;# 
   487  0FEF                     	;# 
   488  0000                     	;# 
   489  0001                     	;# 
   490  0002                     	;# 
   491  0003                     	;# 
   492  0004                     	;# 
   493  0005                     	;# 
   494  0006                     	;# 
   495  0007                     	;# 
   496  0008                     	;# 
   497  0009                     	;# 
   498  000A                     	;# 
   499  000B                     	;# 
   500  000C                     	;# 
   501  000D                     	;# 
   502  000E                     	;# 
   503  0011                     	;# 
   504  0012                     	;# 
   505  0015                     	;# 
   506  0016                     	;# 
   507  0016                     	;# 
   508  0017                     	;# 
   509  0018                     	;# 
   510  0019                     	;# 
   511  001A                     	;# 
   512  001B                     	;# 
   513  001C                     	;# 
   514  008C                     	;# 
   515  008D                     	;# 
   516  008E                     	;# 
   517  0091                     	;# 
   518  0092                     	;# 
   519  0095                     	;# 
   520  0096                     	;# 
   521  0097                     	;# 
   522  0098                     	;# 
   523  0099                     	;# 
   524  009A                     	;# 
   525  009B                     	;# 
   526  009B                     	;# 
   527  009C                     	;# 
   528  009D                     	;# 
   529  009E                     	;# 
   530  009F                     	;# 
   531  010C                     	;# 
   532  010D                     	;# 
   533  010E                     	;# 
   534  0111                     	;# 
   535  0112                     	;# 
   536  0113                     	;# 
   537  0114                     	;# 
   538  0115                     	;# 
   539  0116                     	;# 
   540  0117                     	;# 
   541  0118                     	;# 
   542  0119                     	;# 
   543  011D                     	;# 
   544  018C                     	;# 
   545  018D                     	;# 
   546  018E                     	;# 
   547  0191                     	;# 
   548  0191                     	;# 
   549  0192                     	;# 
   550  0193                     	;# 
   551  0193                     	;# 
   552  0194                     	;# 
   553  0195                     	;# 
   554  0196                     	;# 
   555  0197                     	;# 
   556  0199                     	;# 
   557  019A                     	;# 
   558  019B                     	;# 
   559  019B                     	;# 
   560  019C                     	;# 
   561  019D                     	;# 
   562  019E                     	;# 
   563  019F                     	;# 
   564  020C                     	;# 
   565  020D                     	;# 
   566  0211                     	;# 
   567  0211                     	;# 
   568  0212                     	;# 
   569  0212                     	;# 
   570  0213                     	;# 
   571  0213                     	;# 
   572  0214                     	;# 
   573  0214                     	;# 
   574  0215                     	;# 
   575  0215                     	;# 
   576  0215                     	;# 
   577  0216                     	;# 
   578  0216                     	;# 
   579  0217                     	;# 
   580  0217                     	;# 
   581  0391                     	;# 
   582  0392                     	;# 
   583  0393                     	;# 
   584  0394                     	;# 
   585  0395                     	;# 
   586  0396                     	;# 
   587  039A                     	;# 
   588  039B                     	;# 
   589  0611                     	;# 
   590  0612                     	;# 
   591  0613                     	;# 
   592  0613                     	;# 
   593  0614                     	;# 
   594  0615                     	;# 
   595  0616                     	;# 
   596  0616                     	;# 
   597  0691                     	;# 
   598  0692                     	;# 
   599  0693                     	;# 
   600  0694                     	;# 
   601  0695                     	;# 
   602  0E8E                     	;# 
   603  0E8F                     	;# 
   604  0E90                     	;# 
   605  0E91                     	;# 
   606  0E92                     	;# 
   607  0E93                     	;# 
   608  0E94                     	;# 
   609  0E94                     	;# 
   610  0E95                     	;# 
   611  0E96                     	;# 
   612  0E97                     	;# 
   613  0E98                     	;# 
   614  0E99                     	;# 
   615  0E9A                     	;# 
   616  0E9B                     	;# 
   617  0E9C                     	;# 
   618  0E9D                     	;# 
   619  0E9E                     	;# 
   620  0E9F                     	;# 
   621  0FE4                     	;# 
   622  0FE5                     	;# 
   623  0FE6                     	;# 
   624  0FE7                     	;# 
   625  0FE8                     	;# 
   626  0FE9                     	;# 
   627  0FEA                     	;# 
   628  0FEB                     	;# 
   629  0FED                     	;# 
   630  0FEE                     	;# 
   631  0FEF                     	;# 
   632                           
   633                           	psect	stringtext1
   634  1000                     __pstringtext1:	
   635  1000                     _maxLEDs:	
   636  1000  343C               	retlw	60
   637  1001                     __end_of_maxLEDs:	
   638  0063                     _RA3	set	99
   639  006E                     _RB6	set	110
   640  006D                     _RB5	set	109
   641  006C                     _RB4	set	108
   642  009F                     _ADCON2	set	159
   643  009E                     _ADCON1	set	158
   644  009D                     _ADCON0	set	157
   645  008E                     _TRISC	set	142
   646  008D                     _TRISB	set	141
   647  008C                     _TRISA	set	140
   648  0095                     _OPTION_REG	set	149
   649  0099                     _OSCCON	set	153
   650  04D6                     _PLLRDY	set	1238
   651  010E                     _LATC	set	270
   652  010D                     _LATB	set	269
   653  010C                     _LATA	set	268
   654  018E                     _ANSELC	set	398
   655  018D                     _ANSELB	set	397
   656  018C                     _ANSELA	set	396
   657  039B                     _ACTCON	set	923
   658                           
   659                           ; #config settings
   660  0000                     
   661                           	psect	cinit
   662  0FF5                     start_initialization:	
   663  0FF5                     __initialization:	
   664                           
   665                           ; Clear objects allocated to COMMON
   666  0FF5  01FD               	clrf	__pbssCOMMON& (0+127)
   667                           
   668                           ; Clear objects allocated to BANK0
   669  0FF6  3020               	movlw	low __pbssBANK0
   670  0FF7  0084               	movwf	4
   671  0FF8  3000               	movlw	high __pbssBANK0
   672  0FF9  0085               	movwf	5
   673  0FFA  304B               	movlw	75
   674  0FFB  318C  2440         	fcall	clear_ram0
   675  0FFD                     end_of_initialization:	
   676                           ;End of C runtime variable initialization code
   677                           
   678  0FFD                     __end_of__initialization:	
   679  0FFD  0020               	movlb	0
   680  0FFE  318E  2EC2         	ljmp	_main	;jump to C main() function
   681                           
   682                           	psect	bssCOMMON
   683  007D                     __pbssCOMMON:	
   684  007D                     _arrayIndex:	
   685  007D                     	ds	1
   686                           
   687                           	psect	bssBANK0
   688  0020                     __pbssBANK0:	
   689  0020                     _greenArray:	
   690  0020                     	ds	24
   691  0038                     _blueArray:	
   692  0038                     	ds	24
   693  0050                     _redArray:	
   694  0050                     	ds	24
   695  0068                     _isOn:	
   696  0068                     	ds	1
   697  0069                     _mode:	
   698  0069                     	ds	1
   699  006A                     _temp:	
   700  006A                     	ds	1
   701                           
   702                           	psect	clrtext
   703  0C40                     clear_ram0:	
   704                           ;	Called with FSR0 containing the base address, and
   705                           ;	WREG with the size to clear
   706                           
   707  0C40  0064               	clrwdt	;clear the watchdog before getting into this loop
   708  0C41                     clrloop0:	
   709  0C41  0180               	clrf	0	;clear RAM location pointed to by FSR
   710  0C42  3101               	addfsr 0,1
   711  0C43  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   712  0C44  2C41               	goto	clrloop0	;have we reached the end yet?
   713  0C45  3400               	retlw	0	;all done for this memory range, return
   714                           
   715                           	psect	cstackCOMMON
   716  0070                     __pcstackCOMMON:	
   717  0070                     ?_neoRGB:	
   718  0070                     ?_neoArray:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_initOsc:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ??_initOsc:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?_initPorts:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ??_initPorts:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_rainbow:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ??_rainbow:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_fade:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?_strobe:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?_main:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     neoRGB@green:	
   749                           ; 2 bytes @ 0x0
   750                           
   751  0070                     neoArray@leds:	
   752                           ; 1 bytes @ 0x0
   753                           
   754                           
   755                           ; 1 bytes @ 0x0
   756  0070                     	ds	1
   757  0071                     rainbow@half:	
   758  0071                     neoRGB@blue:	
   759                           ; 1 bytes @ 0x1
   760                           
   761  0071                     neoArray@offset:	
   762                           ; 1 bytes @ 0x1
   763                           
   764                           
   765                           ; 1 bytes @ 0x1
   766  0071                     	ds	1
   767  0072                     ??_neoArray:	
   768  0072                     rainbow@quarter:	
   769                           ; 1 bytes @ 0x2
   770                           
   771  0072                     neoRGB@leds:	
   772                           ; 1 bytes @ 0x2
   773                           
   774                           
   775                           ; 1 bytes @ 0x2
   776  0072                     	ds	1
   777  0073                     ??_neoRGB:	
   778  0073                     rainbow@eighth:	
   779                           ; 1 bytes @ 0x3
   780                           
   781                           
   782                           ; 1 bytes @ 0x3
   783  0073                     	ds	1
   784  0074                     neoRGB@red:	
   785                           
   786                           ; 1 bytes @ 0x4
   787  0074                     	ds	1
   788  0075                     neoRGB@i:	
   789  0075                     neoArray@tempIndex:	
   790                           ; 1 bytes @ 0x5
   791                           
   792                           
   793                           ; 1 bytes @ 0x5
   794  0075                     	ds	1
   795  0076                     neoRGB@i_105:	
   796  0076                     neoArray@i:	
   797                           ; 1 bytes @ 0x6
   798                           
   799                           
   800                           ; 1 bytes @ 0x6
   801  0076                     	ds	1
   802  0077                     neoRGB@i_106:	
   803  0077                     neoArray@i_113:	
   804                           ; 1 bytes @ 0x7
   805                           
   806                           
   807                           ; 1 bytes @ 0x7
   808  0077                     	ds	1
   809  0078                     ??_fade:	
   810  0078                     ??_strobe:	
   811                           ; 1 bytes @ 0x8
   812                           
   813  0078                     neoArray@i_114:	
   814                           ; 1 bytes @ 0x8
   815                           
   816                           
   817                           ; 1 bytes @ 0x8
   818  0078                     	ds	1
   819  0079                     neoArray@arraySize:	
   820                           
   821                           ; 1 bytes @ 0x9
   822  0079                     	ds	2
   823  007B                     fade@arraySize:	
   824  007B                     strobe@arraySize:	
   825                           ; 1 bytes @ 0xB
   826                           
   827                           
   828                           ; 1 bytes @ 0xB
   829  007B                     	ds	1
   830  007C                     fade@i:	
   831  007C                     strobe@i:	
   832                           ; 1 bytes @ 0xC
   833                           
   834                           
   835                           ; 1 bytes @ 0xC
   836  007C                     	ds	1
   837                           
   838                           	psect	cstackBANK0
   839  006B                     __pcstackBANK0:	
   840  006B                     ??_main:	
   841                           
   842                           ; 1 bytes @ 0x0
   843  006B                     	ds	3
   844                           
   845                           	psect	maintext
   846  0EC2                     __pmaintext:	
   847 ;;
   848 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   849 ;;
   850 ;; *************** function _main *****************
   851 ;; Defined at:
   852 ;;		line 115 in file "main.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;		None
   855 ;; Auto vars:     Size  Location     Type
   856 ;;		None
   857 ;; Return value:  Size  Location     Type
   858 ;;                  2   97[None  ] int 
   859 ;; Registers used:
   860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : B1F/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   868 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   869 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   870 ;;Total ram usage:        3 bytes
   871 ;; Hardware stack levels required when called:    2
   872 ;; This function calls:
   873 ;;		_fade
   874 ;;		_initOsc
   875 ;;		_initPorts
   876 ;;		_neoArray
   877 ;;		_neoRGB
   878 ;;		_rainbow
   879 ;;		_strobe
   880 ;; This function is called by:
   881 ;;		Startup code after reset
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           
   886                           ;psect for function _main
   887  0EC2                     _main:	
   888                           
   889                           ;main.c: 118: initOsc();
   890                           
   891                           ;incstack = 0
   892                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   893  0EC2  318C  2446  318E   	fcall	_initOsc
   894                           
   895                           ;main.c: 119: initPorts();
   896  0EC5  318C  2450  318E   	fcall	_initPorts
   897                           
   898                           ;main.c: 120: rainbow();
   899  0EC8  318D  25C7  318E   	fcall	_rainbow
   900                           
   901                           ;main.c: 121: isOn = 1;
   902  0ECB  0020               	movlb	0	; select bank0
   903  0ECC  01E8               	clrf	_isOn
   904  0ECD  0AE8               	incf	_isOn,f
   905                           
   906                           ;main.c: 122: mode = 14;
   907  0ECE  300E               	movlw	14
   908  0ECF  00EB               	movwf	??_main
   909  0ED0  086B               	movf	??_main,w
   910  0ED1  00E9               	movwf	_mode
   911                           
   912                           ;main.c: 123: _delay((unsigned long)((1)*(48000000/4000.0)));
   913  0ED2  3010               	movlw	16
   914  0ED3  0020               	movlb	0	; select bank0
   915  0ED4  00EB               	movwf	??_main
   916  0ED5  3094               	movlw	148
   917  0ED6                     u657:	
   918  0ED6  0B89               	decfsz	9,f
   919  0ED7  2ED6               	goto	u657
   920  0ED8  0BEB               	decfsz	??_main,f
   921  0ED9  2ED6               	goto	u657
   922  0EDA  0000               	nop
   923  0EDB                     l1188:	
   924                           ;main.c: 126: while (1)
   925                           
   926                           
   927                           ;main.c: 127: {
   928                           ;main.c: 129: if (RB4 == 0)
   929  0EDB  0020               	movlb	0	; select bank0
   930  0EDC  1A0D               	btfsc	13,4	;volatile
   931  0EDD  2EF4               	goto	l1194
   932                           
   933                           ;main.c: 130: {
   934                           ;main.c: 131: isOn = !isOn;
   935  0EDE  0868               	movf	_isOn,w
   936  0EDF  1D03               	btfss	3,2
   937  0EE0  2EE3               	goto	u570
   938  0EE1  3001               	movlw	1
   939  0EE2  2EE4               	goto	u580
   940  0EE3                     u570:	
   941  0EE3  3000               	movlw	0
   942  0EE4                     u580:	
   943  0EE4  00EB               	movwf	??_main
   944  0EE5  086B               	movf	??_main,w
   945  0EE6  00E8               	movwf	_isOn
   946                           
   947                           ;main.c: 132: _delay((unsigned long)((100)*(48000000/4000.0)));
   948  0EE7  3007               	movlw	7
   949  0EE8  0020               	movlb	0	; select bank0
   950  0EE9  00EC               	movwf	??_main+1
   951  0EEA  3017               	movlw	23
   952  0EEB  00EB               	movwf	??_main
   953  0EEC  306A               	movlw	106
   954  0EED                     u667:	
   955  0EED  0B89               	decfsz	9,f
   956  0EEE  2EED               	goto	u667
   957  0EEF  0BEB               	decfsz	??_main,f
   958  0EF0  2EED               	goto	u667
   959  0EF1  0BEC               	decfsz	??_main+1,f
   960  0EF2  2EED               	goto	u667
   961  0EF3  0000               	nop
   962  0EF4                     l1194:	
   963                           
   964                           ;main.c: 133: }
   965                           ;main.c: 136: if (RB5 == 0)
   966  0EF4  0020               	movlb	0	; select bank0
   967  0EF5  1A8D               	btfsc	13,5	;volatile
   968  0EF6  2F0E               	goto	l1204
   969                           
   970                           ;main.c: 137: {
   971                           ;main.c: 139: if (mode >= 14)
   972  0EF7  300E               	movlw	14
   973  0EF8  0269               	subwf	_mode,w
   974  0EF9  1C03               	skipc
   975  0EFA  2EFD               	goto	l1200
   976                           
   977                           ;main.c: 140: mode = 0;
   978  0EFB  01E9               	clrf	_mode
   979  0EFC  2F01               	goto	l1202
   980  0EFD                     l1200:	
   981                           
   982                           ;main.c: 141: else
   983                           ;main.c: 142: mode++;
   984  0EFD  3001               	movlw	1
   985  0EFE  00EB               	movwf	??_main
   986  0EFF  086B               	movf	??_main,w
   987  0F00  07E9               	addwf	_mode,f
   988  0F01                     l1202:	
   989                           
   990                           ;main.c: 144: _delay((unsigned long)((100)*(48000000/4000.0)));
   991  0F01  3007               	movlw	7
   992  0F02  0020               	movlb	0	; select bank0
   993  0F03  00EC               	movwf	??_main+1
   994  0F04  3017               	movlw	23
   995  0F05  00EB               	movwf	??_main
   996  0F06  306A               	movlw	106
   997  0F07                     u677:	
   998  0F07  0B89               	decfsz	9,f
   999  0F08  2F07               	goto	u677
  1000  0F09  0BEB               	decfsz	??_main,f
  1001  0F0A  2F07               	goto	u677
  1002  0F0B  0BEC               	decfsz	??_main+1,f
  1003  0F0C  2F07               	goto	u677
  1004  0F0D  0000               	nop
  1005  0F0E                     l1204:	
  1006                           
  1007                           ;main.c: 145: }
  1008                           ;main.c: 146: if (RB6 == 0)
  1009  0F0E  0020               	movlb	0	; select bank0
  1010  0F0F  1B0D               	btfsc	13,6	;volatile
  1011  0F10  2F28               	goto	l1214
  1012                           
  1013                           ;main.c: 147: {
  1014                           ;main.c: 149: if (mode <= 0)
  1015  0F11  0869               	movf	_mode,w
  1016  0F12  1D03               	btfss	3,2
  1017  0F13  2F19               	goto	l1210
  1018                           
  1019                           ;main.c: 150: mode = 14;
  1020  0F14  300E               	movlw	14
  1021  0F15  00EB               	movwf	??_main
  1022  0F16  086B               	movf	??_main,w
  1023  0F17  00E9               	movwf	_mode
  1024  0F18  2F1B               	goto	l1212
  1025  0F19                     l1210:	
  1026                           
  1027                           ;main.c: 151: else
  1028                           ;main.c: 152: mode--;
  1029  0F19  3001               	movlw	1
  1030  0F1A  02E9               	subwf	_mode,f
  1031  0F1B                     l1212:	
  1032                           
  1033                           ;main.c: 154: _delay((unsigned long)((100)*(48000000/4000.0)));
  1034  0F1B  3007               	movlw	7
  1035  0F1C  0020               	movlb	0	; select bank0
  1036  0F1D  00EC               	movwf	??_main+1
  1037  0F1E  3017               	movlw	23
  1038  0F1F  00EB               	movwf	??_main
  1039  0F20  306A               	movlw	106
  1040  0F21                     u687:	
  1041  0F21  0B89               	decfsz	9,f
  1042  0F22  2F21               	goto	u687
  1043  0F23  0BEB               	decfsz	??_main,f
  1044  0F24  2F21               	goto	u687
  1045  0F25  0BEC               	decfsz	??_main+1,f
  1046  0F26  2F21               	goto	u687
  1047  0F27  0000               	nop
  1048  0F28                     l1214:	
  1049                           
  1050                           ;main.c: 155: }
  1051                           ;main.c: 157: if (isOn)
  1052  0F28  0020               	movlb	0	; select bank0
  1053  0F29  0868               	movf	_isOn,w
  1054  0F2A  1D03               	btfss	3,2
  1055  0F2B  2FC9               	goto	l1250
  1056  0F2C  2FD5               	goto	l1252
  1057  0F2D                     l1218:	
  1058                           ;main.c: 162: {
  1059                           ;main.c: 163: case 0:
  1060                           
  1061                           ;main.c: 158: {
  1062                           ;main.c: 161: switch (mode)
  1063                           
  1064                           
  1065                           ;main.c: 164: neoRGB(255, 0, 0, maxLEDs);
  1066  0F2D  01F0               	clrf	neoRGB@green
  1067  0F2E  01F1               	clrf	neoRGB@blue
  1068  0F2F  3000               	movlw	low (_maxLEDs| (0+32768))
  1069  0F30  0084               	movwf	4
  1070  0F31  3090               	movlw	high (_maxLEDs| (0+32768))
  1071  0F32  0085               	movwf	5
  1072  0F33  0800               	movf	0,w	;code access
  1073  0F34  00EB               	movwf	??_main
  1074  0F35  086B               	movf	??_main,w
  1075  0F36  2F9D               	goto	L7
  1076  0F37                     l1220:	
  1077                           ;main.c: 166: case 1:
  1078                           
  1079                           ;main.c: 165: break;
  1080                           
  1081                           
  1082                           ;main.c: 167: neoRGB(255, 145, 0, maxLEDs);
  1083  0F37  3091               	movlw	145
  1084  0F38  2F3C               	goto	L11
  1085  0F39                     l1222:	
  1086                           ;main.c: 169: case 2:
  1087                           
  1088                           ;main.c: 168: break;
  1089                           
  1090                           
  1091                           ;main.c: 170: neoRGB(255, 215, 0, maxLEDs);
  1092  0F39  30D7               	movlw	215
  1093  0F3A  2F3C               	goto	L11
  1094  0F3B                     l1224:	
  1095                           ;main.c: 172: case 3:
  1096                           
  1097                           ;main.c: 171: break;
  1098                           
  1099                           
  1100                           ;main.c: 173: neoRGB(255, 255, 0, maxLEDs);
  1101  0F3B  30FF               	movlw	255
  1102  0F3C                     L11:	
  1103  0F3C  0020               	movlb	0	; select bank0
  1104  0F3D  00EB               	movwf	??_main
  1105  0F3E  086B               	movf	??_main,w
  1106  0F3F  00F0               	movwf	neoRGB@green
  1107  0F40  01F1               	clrf	neoRGB@blue
  1108  0F41  2F85               	goto	L12
  1109  0F42                     l1226:	
  1110                           ;main.c: 175: case 4:
  1111                           
  1112                           ;main.c: 174: break;
  1113                           
  1114                           
  1115                           ;main.c: 176: neoRGB(0, 255, 0, maxLEDs);
  1116  0F42  30FF               	movlw	255
  1117  0F43  0020               	movlb	0	; select bank0
  1118  0F44  00EB               	movwf	??_main
  1119  0F45  086B               	movf	??_main,w
  1120  0F46  00F0               	movwf	neoRGB@green
  1121  0F47  01F1               	clrf	neoRGB@blue
  1122  0F48  2F67               	goto	L8
  1123  0F49                     l1228:	
  1124                           ;main.c: 178: case 5:
  1125                           
  1126                           ;main.c: 177: break;
  1127                           
  1128                           
  1129                           ;main.c: 179: neoRGB(0, 128, 128, maxLEDs);
  1130  0F49  3080               	movlw	128
  1131  0F4A  0020               	movlb	0	; select bank0
  1132  0F4B  00EB               	movwf	??_main
  1133  0F4C  086B               	movf	??_main,w
  1134  0F4D  00F0               	movwf	neoRGB@green
  1135  0F4E  3080               	movlw	128
  1136  0F4F  2F56               	goto	L9
  1137  0F50                     l1230:	
  1138                           ;main.c: 181: case 6:
  1139                           
  1140                           ;main.c: 180: break;
  1141                           
  1142                           
  1143                           ;main.c: 182: neoRGB(0, 255, 255, maxLEDs);
  1144  0F50  30FF               	movlw	255
  1145  0F51  0020               	movlb	0	; select bank0
  1146  0F52  00EB               	movwf	??_main
  1147  0F53  086B               	movf	??_main,w
  1148  0F54  00F0               	movwf	neoRGB@green
  1149  0F55  30FF               	movlw	255
  1150  0F56                     L9:	
  1151  0F56  00EC               	movwf	??_main+1
  1152  0F57  086C               	movf	??_main+1,w
  1153  0F58  00F1               	movwf	neoRGB@blue
  1154  0F59  3000               	movlw	low (_maxLEDs| (0+32768))
  1155  0F5A  0084               	movwf	4
  1156  0F5B  3090               	movlw	high (_maxLEDs| (0+32768))
  1157  0F5C  0085               	movwf	5
  1158  0F5D  0800               	movf	0,w	;code access
  1159  0F5E  00ED               	movwf	??_main+2
  1160  0F5F  086D               	movf	??_main+2,w
  1161  0F60  2FDE               	goto	L6
  1162  0F61                     l1232:	
  1163                           ;main.c: 184: case 7:
  1164                           
  1165                           ;main.c: 183: break;
  1166                           
  1167                           
  1168                           ;main.c: 185: neoRGB(0, 0, 255, maxLEDs);
  1169  0F61  01F0               	clrf	neoRGB@green
  1170  0F62  30FF               	movlw	255
  1171  0F63  0020               	movlb	0	; select bank0
  1172  0F64  00EB               	movwf	??_main
  1173  0F65  086B               	movf	??_main,w
  1174  0F66  00F1               	movwf	neoRGB@blue
  1175  0F67                     L8:	
  1176  0F67  3000               	movlw	low (_maxLEDs| (0+32768))
  1177  0F68  0084               	movwf	4
  1178  0F69  3090               	movlw	high (_maxLEDs| (0+32768))
  1179  0F6A  0085               	movwf	5
  1180  0F6B  0800               	movf	0,w	;code access
  1181  0F6C  00EC               	movwf	??_main+1
  1182  0F6D  086C               	movf	??_main+1,w
  1183  0F6E  2FDE               	goto	L6
  1184  0F6F                     l1234:	
  1185                           ;main.c: 187: case 8:
  1186                           
  1187                           ;main.c: 186: break;
  1188                           
  1189                           
  1190                           ;main.c: 188: neoRGB(128, 0, 128, maxLEDs);
  1191  0F6F  01F0               	clrf	neoRGB@green
  1192  0F70  3080               	movlw	128
  1193  0F71  0020               	movlb	0	; select bank0
  1194  0F72  00EB               	movwf	??_main
  1195  0F73  086B               	movf	??_main,w
  1196  0F74  00F1               	movwf	neoRGB@blue
  1197  0F75  3000               	movlw	low (_maxLEDs| (0+32768))
  1198  0F76  0084               	movwf	4
  1199  0F77  3090               	movlw	high (_maxLEDs| (0+32768))
  1200  0F78  0085               	movwf	5
  1201  0F79  0800               	movf	0,w	;code access
  1202  0F7A  00EC               	movwf	??_main+1
  1203  0F7B  086C               	movf	??_main+1,w
  1204  0F7C  00F2               	movwf	neoRGB@leds
  1205  0F7D  3080               	movlw	128
  1206  0F7E  2FE0               	goto	L1
  1207  0F7F                     l1236:	
  1208                           ;main.c: 190: case 9:
  1209                           
  1210                           ;main.c: 189: break;
  1211                           
  1212                           
  1213                           ;main.c: 191: neoRGB(255, 0, 255, maxLEDs);
  1214  0F7F  01F0               	clrf	neoRGB@green
  1215  0F80  30FF               	movlw	255
  1216  0F81  0020               	movlb	0	; select bank0
  1217  0F82  00EB               	movwf	??_main
  1218  0F83  086B               	movf	??_main,w
  1219  0F84  00F1               	movwf	neoRGB@blue
  1220  0F85                     L12:	
  1221  0F85  3000               	movlw	low (_maxLEDs| (0+32768))
  1222  0F86  0084               	movwf	4
  1223  0F87  3090               	movlw	high (_maxLEDs| (0+32768))
  1224  0F88  0085               	movwf	5
  1225  0F89  0800               	movf	0,w	;code access
  1226  0F8A  00EC               	movwf	??_main+1
  1227  0F8B  086C               	movf	??_main+1,w
  1228  0F8C  2F9D               	goto	L7
  1229  0F8D                     l1238:	
  1230                           ;main.c: 193: case 10:
  1231                           
  1232                           ;main.c: 192: break;
  1233                           
  1234                           
  1235                           ;main.c: 194: neoRGB(255, 255, 255, maxLEDs);
  1236  0F8D  30FF               	movlw	255
  1237  0F8E  0020               	movlb	0	; select bank0
  1238  0F8F  00EB               	movwf	??_main
  1239  0F90  086B               	movf	??_main,w
  1240  0F91  00F0               	movwf	neoRGB@green
  1241  0F92  30FF               	movlw	255
  1242  0F93  00EC               	movwf	??_main+1
  1243  0F94  086C               	movf	??_main+1,w
  1244  0F95  00F1               	movwf	neoRGB@blue
  1245  0F96  3000               	movlw	low (_maxLEDs| (0+32768))
  1246  0F97  0084               	movwf	4
  1247  0F98  3090               	movlw	high (_maxLEDs| (0+32768))
  1248  0F99  0085               	movwf	5
  1249  0F9A  0800               	movf	0,w	;code access
  1250  0F9B  00ED               	movwf	??_main+2
  1251  0F9C  086D               	movf	??_main+2,w
  1252  0F9D                     L7:	
  1253  0F9D  00F2               	movwf	neoRGB@leds
  1254  0F9E  30FF               	movlw	255
  1255  0F9F  2FE0               	goto	L1
  1256  0FA0                     l1240:	
  1257                           ;main.c: 196: case 11:
  1258                           
  1259                           ;main.c: 195: break;
  1260                           
  1261                           
  1262                           ;main.c: 197: neoArray(24, maxLEDs, 0);
  1263  0FA0  3000               	movlw	low (_maxLEDs| (0+32768))
  1264  0FA1  0084               	movwf	4
  1265  0FA2  3090               	movlw	high (_maxLEDs| (0+32768))
  1266  0FA3  0085               	movwf	5
  1267  0FA4  0800               	movf	0,w	;code access
  1268  0FA5  0020               	movlb	0	; select bank0
  1269  0FA6  00EB               	movwf	??_main
  1270  0FA7  086B               	movf	??_main,w
  1271  0FA8  00F0               	movwf	neoArray@leds
  1272  0FA9  01F1               	clrf	neoArray@offset
  1273  0FAA  3018               	movlw	24
  1274  0FAB  318D  2525  318E   	fcall	_neoArray
  1275                           
  1276                           ;main.c: 198: break;
  1277  0FAE  2FE3               	goto	l1254
  1278  0FAF                     l1242:	
  1279                           ;main.c: 199: case 12:
  1280                           
  1281                           
  1282                           ;main.c: 200: neoArray(24, maxLEDs, -1);
  1283  0FAF  3000               	movlw	low (_maxLEDs| (0+32768))
  1284  0FB0  0084               	movwf	4
  1285  0FB1  3090               	movlw	high (_maxLEDs| (0+32768))
  1286  0FB2  0085               	movwf	5
  1287  0FB3  0800               	movf	0,w	;code access
  1288  0FB4  0020               	movlb	0	; select bank0
  1289  0FB5  00EB               	movwf	??_main
  1290  0FB6  086B               	movf	??_main,w
  1291  0FB7  00F0               	movwf	neoArray@leds
  1292  0FB8  01F1               	clrf	neoArray@offset
  1293  0FB9  03F1               	decf	neoArray@offset,f
  1294  0FBA  3018               	movlw	24
  1295  0FBB  318D  2525  318E   	fcall	_neoArray
  1296                           
  1297                           ;main.c: 201: break;
  1298  0FBE  2FE3               	goto	l1254
  1299  0FBF                     l1244:	
  1300                           ;main.c: 202: case 13:
  1301                           
  1302                           
  1303                           ;main.c: 203: fade(24);
  1304  0FBF  3018               	movlw	24
  1305  0FC0  318C  249C  318E   	fcall	_fade
  1306                           
  1307                           ;main.c: 204: break;
  1308  0FC3  2FE3               	goto	l1254
  1309  0FC4                     l1246:	
  1310                           ;main.c: 205: case 14:
  1311                           
  1312                           
  1313                           ;main.c: 206: strobe(24);
  1314  0FC4  3018               	movlw	24
  1315  0FC5  318C  2469  318E   	fcall	_strobe
  1316                           
  1317                           ;main.c: 208: }
  1318                           
  1319                           ;main.c: 207: break;
  1320  0FC8  2FE3               	goto	l1254
  1321  0FC9                     l1250:	
  1322  0FC9  0020               	movlb	0	; select bank0
  1323  0FCA  0869               	movf	_mode,w
  1324                           
  1325                           ; Switch size 1, requested type "space"
  1326                           ; Number of cases is 15, Range of values is 0 to 14
  1327                           ; switch strategies available:
  1328                           ; Name         Instructions Cycles
  1329                           ; direct_byte           36     6 (fixed)
  1330                           ; simple_byte           46    24 (average)
  1331                           ; jumptable            260     6 (fixed)
  1332                           ;	Chosen strategy is direct_byte
  1333  0FCB  0084               	movwf	4
  1334  0FCC  300F               	movlw	15
  1335  0FCD  0204               	subwf	4,w
  1336  0FCE  1803               	skipnc
  1337  0FCF  2FE3               	goto	l1254
  1338  0FD0  318C               	movlp	high S1284
  1339  0FD1  3504               	lslf	4,w
  1340  0FD2  3E09               	addlw	low S1284
  1341  0FD3  0082               	movwf	2
  1342                           
  1343                           ;main.c: 209: }
  1344  0FD4  2FE3               	goto	l1254
  1345  0FD5                     l1252:	
  1346                           
  1347                           ;main.c: 210: else
  1348                           ;main.c: 212: neoRGB(0, 0, 0, maxLEDs);
  1349  0FD5  01F0               	clrf	neoRGB@green
  1350  0FD6  01F1               	clrf	neoRGB@blue
  1351  0FD7  3000               	movlw	low (_maxLEDs| (0+32768))
  1352  0FD8  0084               	movwf	4
  1353  0FD9  3090               	movlw	high (_maxLEDs| (0+32768))
  1354  0FDA  0085               	movwf	5
  1355  0FDB  0800               	movf	0,w	;code access
  1356  0FDC  00EB               	movwf	??_main
  1357  0FDD  086B               	movf	??_main,w
  1358  0FDE                     L6:	
  1359  0FDE  00F2               	movwf	neoRGB@leds
  1360  0FDF  3000               	movlw	0
  1361  0FE0                     L1:	
  1362  0FE0  318C  24D3  318E   	fcall	_neoRGB
  1363  0FE3                     l1254:	
  1364                           
  1365                           ;main.c: 213: _delay((unsigned long)((25)*(48000000/4000.0)));
  1366  0FE3  3002               	movlw	2
  1367  0FE4  0020               	movlb	0	; select bank0
  1368  0FE5  00EC               	movwf	??_main+1
  1369  0FE6  3086               	movlw	134
  1370  0FE7  00EB               	movwf	??_main
  1371  0FE8  3099               	movlw	153
  1372  0FE9                     u697:	
  1373  0FE9  0B89               	decfsz	9,f
  1374  0FEA  2FE9               	goto	u697
  1375  0FEB  0BEB               	decfsz	??_main,f
  1376  0FEC  2FE9               	goto	u697
  1377  0FED  0BEC               	decfsz	??_main+1,f
  1378  0FEE  2FE9               	goto	u697
  1379                           
  1380                           ;main.c: 216: if (RA3 == 0)
  1381  0FEF  0020               	movlb	0	; select bank0
  1382  0FF0  198C               	btfsc	12,3	;volatile
  1383  0FF1  2EDB               	goto	l1188
  1384  0FF2  3180               	movlp	0	;# 
  1385  0FF3  281C               	goto	28	;# 
  1386  0FF4  2EDB               	goto	l1188
  1387  0FF5                     __end_of_main:	
  1388                           
  1389                           	psect	swtext1
  1390  0C09                     __pswtext1:	
  1391  0C09                     S1284:	
  1392  0C09  318F  2F2D         	ljmp	l1218
  1393  0C0B  318F  2F37         	ljmp	l1220
  1394  0C0D  318F  2F39         	ljmp	l1222
  1395  0C0F  318F  2F3B         	ljmp	l1224
  1396  0C11  318F  2F42         	ljmp	l1226
  1397  0C13  318F  2F49         	ljmp	l1228
  1398  0C15  318F  2F50         	ljmp	l1230
  1399  0C17  318F  2F61         	ljmp	l1232
  1400  0C19  318F  2F6F         	ljmp	l1234
  1401  0C1B  318F  2F7F         	ljmp	l1236
  1402  0C1D  318F  2F8D         	ljmp	l1238
  1403  0C1F  318F  2FA0         	ljmp	l1240
  1404  0C21  318F  2FAF         	ljmp	l1242
  1405  0C23  318F  2FBF         	ljmp	l1244
  1406  0C25  318F  2FC4         	ljmp	l1246
  1407                           
  1408                           	psect	text1
  1409  0C69                     __ptext1:	
  1410 ;; *************** function _strobe *****************
  1411 ;; Defined at:
  1412 ;;		line 105 in file "main.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;  arraySize       1    wreg     unsigned char 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  arraySize       1   11[COMMON] unsigned char 
  1417 ;;  i               1   12[COMMON] unsigned char 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1428 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1429 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1430 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1431 ;;Total ram usage:        5 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:    1
  1434 ;; This function calls:
  1435 ;;		_neoRGB
  1436 ;; This function is called by:
  1437 ;;		_main
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           
  1442                           ;psect for function _strobe
  1443  0C69                     _strobe:	
  1444                           
  1445                           ;incstack = 0
  1446                           ; Regs used in _strobe: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1447                           ;strobe@arraySize stored from wreg
  1448  0C69  00FB               	movwf	strobe@arraySize
  1449                           
  1450                           ;main.c: 108: for (uint8_t i = 0; i < arraySize; i++)
  1451  0C6A  01FC               	clrf	strobe@i
  1452  0C6B                     l1116:	
  1453  0C6B  087B               	movf	strobe@arraySize,w
  1454  0C6C  027C               	subwf	strobe@i,w
  1455  0C6D  1803               	btfsc	3,0
  1456  0C6E  0008               	return
  1457                           
  1458                           ;main.c: 109: {
  1459                           ;main.c: 110: neoRGB(redArray[i], greenArray[i], blueArray[i], maxLEDs);
  1460  0C6F  087C               	movf	strobe@i,w
  1461  0C70  3E20               	addlw	(low (_greenArray| 0))& (0+255)
  1462  0C71  0086               	movwf	6
  1463  0C72  0187               	clrf	7
  1464  0C73  0801               	movf	1,w
  1465  0C74  00F8               	movwf	??_strobe
  1466  0C75  0878               	movf	??_strobe,w
  1467  0C76  00F0               	movwf	neoRGB@green
  1468  0C77  087C               	movf	strobe@i,w
  1469  0C78  3E38               	addlw	(low (_blueArray| 0))& (0+255)
  1470  0C79  0086               	movwf	6
  1471  0C7A  0187               	clrf	7
  1472  0C7B  0801               	movf	1,w
  1473  0C7C  00F9               	movwf	??_strobe+1
  1474  0C7D  0879               	movf	??_strobe+1,w
  1475  0C7E  00F1               	movwf	neoRGB@blue
  1476  0C7F  3000               	movlw	low (_maxLEDs| (0+32768))
  1477  0C80  0084               	movwf	4
  1478  0C81  3090               	movlw	high (_maxLEDs| (0+32768))
  1479  0C82  0085               	movwf	5
  1480  0C83  0800               	movf	0,w	;code access
  1481  0C84  00FA               	movwf	??_strobe+2
  1482  0C85  087A               	movf	??_strobe+2,w
  1483  0C86  00F2               	movwf	neoRGB@leds
  1484  0C87  087C               	movf	strobe@i,w
  1485  0C88  3E50               	addlw	(low (_redArray| 0))& (0+255)
  1486  0C89  0086               	movwf	6
  1487  0C8A  0187               	clrf	7
  1488  0C8B  0801               	movf	1,w
  1489  0C8C  318C  24D3  318C   	fcall	_neoRGB
  1490                           
  1491                           ;main.c: 111: _delay((unsigned long)((5)*(48000000/4000.0)));
  1492  0C8F  304E               	movlw	78
  1493  0C90  00F8               	movwf	??_strobe
  1494  0C91  30EB               	movlw	235
  1495  0C92                     u707:	
  1496  0C92  0B89               	decfsz	9,f
  1497  0C93  2C92               	goto	u707
  1498  0C94  0BF8               	decfsz	??_strobe,f
  1499  0C95  2C92               	goto	u707
  1500  0C96  0000               	nop
  1501  0C97  3001               	movlw	1
  1502  0C98  00F8               	movwf	??_strobe
  1503  0C99  0878               	movf	??_strobe,w
  1504  0C9A  07FC               	addwf	strobe@i,f
  1505  0C9B  2C6B               	goto	l1116
  1506  0C9C                     __end_of_strobe:	
  1507                           
  1508                           	psect	text2
  1509  0DC7                     __ptext2:	
  1510 ;; *************** function _rainbow *****************
  1511 ;; Defined at:
  1512 ;;		line 13 in file "main.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  eighth          1    3[COMMON] unsigned char 
  1517 ;;  quarter         1    2[COMMON] unsigned char 
  1518 ;;  half            1    1[COMMON] unsigned char 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		wreg, status,2, status,0
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1529 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1530 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1531 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1532 ;;Total ram usage:        4 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; This function calls:
  1535 ;;		Nothing
  1536 ;; This function is called by:
  1537 ;;		_main
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           
  1542                           ;psect for function _rainbow
  1543  0DC7                     _rainbow:	
  1544                           
  1545                           ;main.c: 15: uint8_t half = 255 >> 1;
  1546                           
  1547                           ;incstack = 0
  1548                           ; Regs used in _rainbow: [wreg+status,2+status,0]
  1549  0DC7  307F               	movlw	127
  1550  0DC8  00F0               	movwf	??_rainbow
  1551  0DC9  0870               	movf	??_rainbow,w
  1552  0DCA  00F1               	movwf	rainbow@half
  1553                           
  1554                           ;main.c: 16: uint8_t quarter = half >> 1;
  1555  0DCB  3671               	lsrf	rainbow@half,w
  1556  0DCC  00F0               	movwf	??_rainbow
  1557  0DCD  0870               	movf	??_rainbow,w
  1558  0DCE  00F2               	movwf	rainbow@quarter
  1559                           
  1560                           ;main.c: 17: uint8_t eighth = quarter >> 1;
  1561  0DCF  3672               	lsrf	rainbow@quarter,w
  1562  0DD0  00F0               	movwf	??_rainbow
  1563  0DD1  0870               	movf	??_rainbow,w
  1564  0DD2  00F3               	movwf	rainbow@eighth
  1565                           
  1566                           ;main.c: 19: redArray[0] = 255;
  1567  0DD3  30FF               	movlw	255
  1568  0DD4  00F0               	movwf	??_rainbow
  1569  0DD5  0870               	movf	??_rainbow,w
  1570  0DD6  0020               	movlb	0	; select bank0
  1571  0DD7  00D0               	movwf	_redArray
  1572                           
  1573                           ;main.c: 20: redArray[1] = 255 - eighth;
  1574  0DD8  0373               	decf	rainbow@eighth,w
  1575  0DD9  3AFF               	xorlw	255
  1576  0DDA  3EFF               	addlw	255
  1577  0DDB  00F0               	movwf	??_rainbow
  1578  0DDC  0870               	movf	??_rainbow,w
  1579  0DDD  00D1               	movwf	_redArray+1
  1580                           
  1581                           ;main.c: 21: redArray[2] = half + quarter;
  1582  0DDE  0871               	movf	rainbow@half,w
  1583  0DDF  0772               	addwf	rainbow@quarter,w
  1584  0DE0  00F0               	movwf	??_rainbow
  1585  0DE1  0870               	movf	??_rainbow,w
  1586  0DE2  00D2               	movwf	_redArray+2
  1587                           
  1588                           ;main.c: 22: redArray[3] = half + eighth;
  1589  0DE3  0871               	movf	rainbow@half,w
  1590  0DE4  0773               	addwf	rainbow@eighth,w
  1591  0DE5  00F0               	movwf	??_rainbow
  1592  0DE6  0870               	movf	??_rainbow,w
  1593  0DE7  00D3               	movwf	_redArray+3
  1594                           
  1595                           ;main.c: 23: redArray[4] = half;
  1596  0DE8  0871               	movf	rainbow@half,w
  1597  0DE9  00F0               	movwf	??_rainbow
  1598  0DEA  0870               	movf	??_rainbow,w
  1599  0DEB  00D4               	movwf	_redArray+4
  1600                           
  1601                           ;main.c: 24: redArray[5] = quarter + eighth;
  1602  0DEC  0872               	movf	rainbow@quarter,w
  1603  0DED  0773               	addwf	rainbow@eighth,w
  1604  0DEE  00F0               	movwf	??_rainbow
  1605  0DEF  0870               	movf	??_rainbow,w
  1606  0DF0  00D5               	movwf	_redArray+5
  1607                           
  1608                           ;main.c: 25: redArray[6] = quarter;
  1609  0DF1  0872               	movf	rainbow@quarter,w
  1610  0DF2  00F0               	movwf	??_rainbow
  1611  0DF3  0870               	movf	??_rainbow,w
  1612  0DF4  00D6               	movwf	_redArray+6
  1613                           
  1614                           ;main.c: 26: redArray[7] = eighth;
  1615  0DF5  0873               	movf	rainbow@eighth,w
  1616  0DF6  00F0               	movwf	??_rainbow
  1617  0DF7  0870               	movf	??_rainbow,w
  1618  0DF8  00D7               	movwf	_redArray+7
  1619                           
  1620                           ;main.c: 27: redArray[8] = 0;
  1621  0DF9  01D8               	clrf	_redArray+8
  1622                           
  1623                           ;main.c: 28: redArray[9] = 0;
  1624  0DFA  01D9               	clrf	_redArray+9
  1625                           
  1626                           ;main.c: 29: redArray[10] = 0;
  1627  0DFB  01DA               	clrf	_redArray+10
  1628                           
  1629                           ;main.c: 30: redArray[11] = 0;
  1630  0DFC  01DB               	clrf	_redArray+11
  1631                           
  1632                           ;main.c: 31: redArray[12] = 0;
  1633  0DFD  01DC               	clrf	_redArray+12
  1634                           
  1635                           ;main.c: 32: redArray[13] = 0;
  1636  0DFE  01DD               	clrf	_redArray+13
  1637                           
  1638                           ;main.c: 33: redArray[14] = 0;
  1639  0DFF  01DE               	clrf	_redArray+14
  1640                           
  1641                           ;main.c: 34: redArray[15] = 0;
  1642  0E00  01DF               	clrf	_redArray+15
  1643                           
  1644                           ;main.c: 35: redArray[16] = 0;
  1645  0E01  01E0               	clrf	_redArray+16
  1646                           
  1647                           ;main.c: 36: redArray[17] = eighth;
  1648  0E02  0873               	movf	rainbow@eighth,w
  1649  0E03  00F0               	movwf	??_rainbow
  1650  0E04  0870               	movf	??_rainbow,w
  1651  0E05  00E1               	movwf	_redArray+17
  1652                           
  1653                           ;main.c: 37: redArray[18] = quarter;
  1654  0E06  0872               	movf	rainbow@quarter,w
  1655  0E07  00F0               	movwf	??_rainbow
  1656  0E08  0870               	movf	??_rainbow,w
  1657  0E09  00E2               	movwf	_redArray+18
  1658                           
  1659                           ;main.c: 38: redArray[19] = quarter + eighth;
  1660  0E0A  0872               	movf	rainbow@quarter,w
  1661  0E0B  0773               	addwf	rainbow@eighth,w
  1662  0E0C  00F0               	movwf	??_rainbow
  1663  0E0D  0870               	movf	??_rainbow,w
  1664  0E0E  00E3               	movwf	_redArray+19
  1665                           
  1666                           ;main.c: 39: redArray[20] = half;
  1667  0E0F  0871               	movf	rainbow@half,w
  1668  0E10  00F0               	movwf	??_rainbow
  1669  0E11  0870               	movf	??_rainbow,w
  1670  0E12  00E4               	movwf	_redArray+20
  1671                           
  1672                           ;main.c: 40: redArray[21] = half + eighth;
  1673  0E13  0871               	movf	rainbow@half,w
  1674  0E14  0773               	addwf	rainbow@eighth,w
  1675  0E15  00F0               	movwf	??_rainbow
  1676  0E16  0870               	movf	??_rainbow,w
  1677  0E17  00E5               	movwf	_redArray+21
  1678                           
  1679                           ;main.c: 41: redArray[22] = half + quarter;
  1680  0E18  0871               	movf	rainbow@half,w
  1681  0E19  0772               	addwf	rainbow@quarter,w
  1682  0E1A  00F0               	movwf	??_rainbow
  1683  0E1B  0870               	movf	??_rainbow,w
  1684  0E1C  00E6               	movwf	_redArray+22
  1685                           
  1686                           ;main.c: 42: redArray[23] = 255 - eighth;
  1687  0E1D  0373               	decf	rainbow@eighth,w
  1688  0E1E  3AFF               	xorlw	255
  1689  0E1F  3EFF               	addlw	255
  1690  0E20  00F0               	movwf	??_rainbow
  1691  0E21  0870               	movf	??_rainbow,w
  1692  0E22  00E7               	movwf	_redArray+23
  1693                           
  1694                           ;main.c: 44: greenArray[0] = 0;
  1695  0E23  01A0               	clrf	_greenArray
  1696                           
  1697                           ;main.c: 45: greenArray[1] = eighth;
  1698  0E24  0873               	movf	rainbow@eighth,w
  1699  0E25  00F0               	movwf	??_rainbow
  1700  0E26  0870               	movf	??_rainbow,w
  1701  0E27  00A1               	movwf	_greenArray+1
  1702                           
  1703                           ;main.c: 46: greenArray[2] = quarter;
  1704  0E28  0872               	movf	rainbow@quarter,w
  1705  0E29  00F0               	movwf	??_rainbow
  1706  0E2A  0870               	movf	??_rainbow,w
  1707  0E2B  00A2               	movwf	_greenArray+2
  1708                           
  1709                           ;main.c: 47: greenArray[3] = quarter + eighth;
  1710  0E2C  0872               	movf	rainbow@quarter,w
  1711  0E2D  0773               	addwf	rainbow@eighth,w
  1712  0E2E  00F0               	movwf	??_rainbow
  1713  0E2F  0870               	movf	??_rainbow,w
  1714  0E30  00A3               	movwf	_greenArray+3
  1715                           
  1716                           ;main.c: 48: greenArray[4] = half;
  1717  0E31  0871               	movf	rainbow@half,w
  1718  0E32  00F0               	movwf	??_rainbow
  1719  0E33  0870               	movf	??_rainbow,w
  1720  0E34  00A4               	movwf	_greenArray+4
  1721                           
  1722                           ;main.c: 49: greenArray[5] = half + eighth;
  1723  0E35  0871               	movf	rainbow@half,w
  1724  0E36  0773               	addwf	rainbow@eighth,w
  1725  0E37  00F0               	movwf	??_rainbow
  1726  0E38  0870               	movf	??_rainbow,w
  1727  0E39  00A5               	movwf	_greenArray+5
  1728                           
  1729                           ;main.c: 50: greenArray[6] = half + quarter;
  1730  0E3A  0871               	movf	rainbow@half,w
  1731  0E3B  0772               	addwf	rainbow@quarter,w
  1732  0E3C  00F0               	movwf	??_rainbow
  1733  0E3D  0870               	movf	??_rainbow,w
  1734  0E3E  00A6               	movwf	_greenArray+6
  1735                           
  1736                           ;main.c: 51: greenArray[7] = 255 - eighth;
  1737  0E3F  0373               	decf	rainbow@eighth,w
  1738  0E40  3AFF               	xorlw	255
  1739  0E41  3EFF               	addlw	255
  1740  0E42  00F0               	movwf	??_rainbow
  1741  0E43  0870               	movf	??_rainbow,w
  1742  0E44  00A7               	movwf	_greenArray+7
  1743                           
  1744                           ;main.c: 52: greenArray[8] = 255;
  1745  0E45  30FF               	movlw	255
  1746  0E46  00F0               	movwf	??_rainbow
  1747  0E47  0870               	movf	??_rainbow,w
  1748  0E48  00A8               	movwf	_greenArray+8
  1749                           
  1750                           ;main.c: 53: greenArray[9] = 255 - eighth;
  1751  0E49  0373               	decf	rainbow@eighth,w
  1752  0E4A  3AFF               	xorlw	255
  1753  0E4B  3EFF               	addlw	255
  1754  0E4C  00F0               	movwf	??_rainbow
  1755  0E4D  0870               	movf	??_rainbow,w
  1756  0E4E  00A9               	movwf	_greenArray+9
  1757                           
  1758                           ;main.c: 54: greenArray[10] = half + quarter;
  1759  0E4F  0871               	movf	rainbow@half,w
  1760  0E50  0772               	addwf	rainbow@quarter,w
  1761  0E51  00F0               	movwf	??_rainbow
  1762  0E52  0870               	movf	??_rainbow,w
  1763  0E53  00AA               	movwf	_greenArray+10
  1764                           
  1765                           ;main.c: 55: greenArray[11] = half + eighth;
  1766  0E54  0871               	movf	rainbow@half,w
  1767  0E55  0773               	addwf	rainbow@eighth,w
  1768  0E56  00F0               	movwf	??_rainbow
  1769  0E57  0870               	movf	??_rainbow,w
  1770  0E58  00AB               	movwf	_greenArray+11
  1771                           
  1772                           ;main.c: 56: greenArray[12] = half;
  1773  0E59  0871               	movf	rainbow@half,w
  1774  0E5A  00F0               	movwf	??_rainbow
  1775  0E5B  0870               	movf	??_rainbow,w
  1776  0E5C  00AC               	movwf	_greenArray+12
  1777                           
  1778                           ;main.c: 57: greenArray[13] = quarter + eighth;
  1779  0E5D  0872               	movf	rainbow@quarter,w
  1780  0E5E  0773               	addwf	rainbow@eighth,w
  1781  0E5F  00F0               	movwf	??_rainbow
  1782  0E60  0870               	movf	??_rainbow,w
  1783  0E61  00AD               	movwf	_greenArray+13
  1784                           
  1785                           ;main.c: 58: greenArray[14] = quarter;
  1786  0E62  0872               	movf	rainbow@quarter,w
  1787  0E63  00F0               	movwf	??_rainbow
  1788  0E64  0870               	movf	??_rainbow,w
  1789  0E65  00AE               	movwf	_greenArray+14
  1790                           
  1791                           ;main.c: 59: greenArray[15] = eighth;
  1792  0E66  0873               	movf	rainbow@eighth,w
  1793  0E67  00F0               	movwf	??_rainbow
  1794  0E68  0870               	movf	??_rainbow,w
  1795  0E69  00AF               	movwf	_greenArray+15
  1796                           
  1797                           ;main.c: 60: greenArray[16] = 0;
  1798  0E6A  01B0               	clrf	_greenArray+16
  1799                           
  1800                           ;main.c: 61: greenArray[17] = 0;
  1801  0E6B  01B1               	clrf	_greenArray+17
  1802                           
  1803                           ;main.c: 62: greenArray[18] = 0;
  1804  0E6C  01B2               	clrf	_greenArray+18
  1805                           
  1806                           ;main.c: 63: greenArray[19] = 0;
  1807  0E6D  01B3               	clrf	_greenArray+19
  1808                           
  1809                           ;main.c: 64: greenArray[20] = 0;
  1810  0E6E  01B4               	clrf	_greenArray+20
  1811                           
  1812                           ;main.c: 65: greenArray[21] = 0;
  1813  0E6F  01B5               	clrf	_greenArray+21
  1814                           
  1815                           ;main.c: 66: greenArray[22] = 0;
  1816  0E70  01B6               	clrf	_greenArray+22
  1817                           
  1818                           ;main.c: 67: greenArray[23] = 0;
  1819  0E71  01B7               	clrf	_greenArray+23
  1820                           
  1821                           ;main.c: 69: blueArray[0] = 0;
  1822  0E72  01B8               	clrf	_blueArray
  1823                           
  1824                           ;main.c: 70: blueArray[1] = 0;
  1825  0E73  01B9               	clrf	_blueArray+1
  1826                           
  1827                           ;main.c: 71: blueArray[2] = 0;
  1828  0E74  01BA               	clrf	_blueArray+2
  1829                           
  1830                           ;main.c: 72: blueArray[3] = 0;
  1831  0E75  01BB               	clrf	_blueArray+3
  1832                           
  1833                           ;main.c: 73: blueArray[4] = 0;
  1834  0E76  01BC               	clrf	_blueArray+4
  1835                           
  1836                           ;main.c: 74: blueArray[5] = 0;
  1837  0E77  01BD               	clrf	_blueArray+5
  1838                           
  1839                           ;main.c: 75: blueArray[6] = 0;
  1840  0E78  01BE               	clrf	_blueArray+6
  1841                           
  1842                           ;main.c: 76: blueArray[7] = 0;
  1843  0E79  01BF               	clrf	_blueArray+7
  1844                           
  1845                           ;main.c: 77: blueArray[8] = 0;
  1846  0E7A  01C0               	clrf	_blueArray+8
  1847                           
  1848                           ;main.c: 78: blueArray[9] = eighth;
  1849  0E7B  0873               	movf	rainbow@eighth,w
  1850  0E7C  00F0               	movwf	??_rainbow
  1851  0E7D  0870               	movf	??_rainbow,w
  1852  0E7E  00C1               	movwf	_blueArray+9
  1853                           
  1854                           ;main.c: 79: blueArray[10] = quarter;
  1855  0E7F  0872               	movf	rainbow@quarter,w
  1856  0E80  00F0               	movwf	??_rainbow
  1857  0E81  0870               	movf	??_rainbow,w
  1858  0E82  00C2               	movwf	_blueArray+10
  1859                           
  1860                           ;main.c: 80: blueArray[11] = quarter + eighth;
  1861  0E83  0872               	movf	rainbow@quarter,w
  1862  0E84  0773               	addwf	rainbow@eighth,w
  1863  0E85  00F0               	movwf	??_rainbow
  1864  0E86  0870               	movf	??_rainbow,w
  1865  0E87  00C3               	movwf	_blueArray+11
  1866                           
  1867                           ;main.c: 81: blueArray[12] = half;
  1868  0E88  0871               	movf	rainbow@half,w
  1869  0E89  00F0               	movwf	??_rainbow
  1870  0E8A  0870               	movf	??_rainbow,w
  1871  0E8B  00C4               	movwf	_blueArray+12
  1872                           
  1873                           ;main.c: 82: blueArray[13] = half + eighth;
  1874  0E8C  0871               	movf	rainbow@half,w
  1875  0E8D  0773               	addwf	rainbow@eighth,w
  1876  0E8E  00F0               	movwf	??_rainbow
  1877  0E8F  0870               	movf	??_rainbow,w
  1878  0E90  00C5               	movwf	_blueArray+13
  1879                           
  1880                           ;main.c: 83: blueArray[14] = half + quarter;
  1881  0E91  0871               	movf	rainbow@half,w
  1882  0E92  0772               	addwf	rainbow@quarter,w
  1883  0E93  00F0               	movwf	??_rainbow
  1884  0E94  0870               	movf	??_rainbow,w
  1885  0E95  00C6               	movwf	_blueArray+14
  1886                           
  1887                           ;main.c: 84: blueArray[15] = 255 - eighth;
  1888  0E96  0373               	decf	rainbow@eighth,w
  1889  0E97  3AFF               	xorlw	255
  1890  0E98  3EFF               	addlw	255
  1891  0E99  00F0               	movwf	??_rainbow
  1892  0E9A  0870               	movf	??_rainbow,w
  1893  0E9B  00C7               	movwf	_blueArray+15
  1894                           
  1895                           ;main.c: 85: blueArray[16] = 255;
  1896  0E9C  30FF               	movlw	255
  1897  0E9D  00F0               	movwf	??_rainbow
  1898  0E9E  0870               	movf	??_rainbow,w
  1899  0E9F  00C8               	movwf	_blueArray+16
  1900                           
  1901                           ;main.c: 86: blueArray[17] = 255 - eighth;
  1902  0EA0  0373               	decf	rainbow@eighth,w
  1903  0EA1  3AFF               	xorlw	255
  1904  0EA2  3EFF               	addlw	255
  1905  0EA3  00F0               	movwf	??_rainbow
  1906  0EA4  0870               	movf	??_rainbow,w
  1907  0EA5  00C9               	movwf	_blueArray+17
  1908                           
  1909                           ;main.c: 87: blueArray[18] = half + quarter;
  1910  0EA6  0871               	movf	rainbow@half,w
  1911  0EA7  0772               	addwf	rainbow@quarter,w
  1912  0EA8  00F0               	movwf	??_rainbow
  1913  0EA9  0870               	movf	??_rainbow,w
  1914  0EAA  00CA               	movwf	_blueArray+18
  1915                           
  1916                           ;main.c: 88: blueArray[19] = half + eighth;
  1917  0EAB  0871               	movf	rainbow@half,w
  1918  0EAC  0773               	addwf	rainbow@eighth,w
  1919  0EAD  00F0               	movwf	??_rainbow
  1920  0EAE  0870               	movf	??_rainbow,w
  1921  0EAF  00CB               	movwf	_blueArray+19
  1922                           
  1923                           ;main.c: 89: blueArray[20] = half;
  1924  0EB0  0871               	movf	rainbow@half,w
  1925  0EB1  00F0               	movwf	??_rainbow
  1926  0EB2  0870               	movf	??_rainbow,w
  1927  0EB3  00CC               	movwf	_blueArray+20
  1928                           
  1929                           ;main.c: 90: blueArray[21] = quarter + eighth;
  1930  0EB4  0872               	movf	rainbow@quarter,w
  1931  0EB5  0773               	addwf	rainbow@eighth,w
  1932  0EB6  00F0               	movwf	??_rainbow
  1933  0EB7  0870               	movf	??_rainbow,w
  1934  0EB8  00CD               	movwf	_blueArray+21
  1935                           
  1936                           ;main.c: 91: blueArray[22] = quarter;
  1937  0EB9  0872               	movf	rainbow@quarter,w
  1938  0EBA  00F0               	movwf	??_rainbow
  1939  0EBB  0870               	movf	??_rainbow,w
  1940  0EBC  00CE               	movwf	_blueArray+22
  1941                           
  1942                           ;main.c: 92: blueArray[23] = eighth;
  1943  0EBD  0873               	movf	rainbow@eighth,w
  1944  0EBE  00F0               	movwf	??_rainbow
  1945  0EBF  0870               	movf	??_rainbow,w
  1946  0EC0  00CF               	movwf	_blueArray+23
  1947  0EC1  0008               	return
  1948  0EC2                     __end_of_rainbow:	
  1949                           
  1950                           	psect	text3
  1951  0D25                     __ptext3:	
  1952 ;; *************** function _neoArray *****************
  1953 ;; Defined at:
  1954 ;;		line 52 in file "neopixel.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;  arraySize       1    wreg     unsigned char 
  1957 ;;  leds            1    0[COMMON] unsigned char 
  1958 ;;  offset          1    1[COMMON] char 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  arraySize       1    9[COMMON] unsigned char 
  1961 ;;  i               1    8[COMMON] unsigned char 
  1962 ;;  i               1    7[COMMON] unsigned char 
  1963 ;;  i               1    6[COMMON] unsigned char 
  1964 ;;  tempIndex       1    5[COMMON] char 
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      void 
  1967 ;; Registers used:
  1968 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1975 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1976 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1977 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1978 ;;Total ram usage:       10 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           
  1988                           ;psect for function _neoArray
  1989  0D25                     _neoArray:	
  1990                           
  1991                           ;incstack = 0
  1992                           ; Regs used in _neoArray: [wreg+fsr1l+fsr1h+status,2+status,0]
  1993                           ;neoArray@arraySize stored from wreg
  1994  0D25  00F9               	movwf	neoArray@arraySize
  1995                           
  1996                           ;neopixel.c: 55: if (arrayIndex >= arraySize)
  1997  0D26  087D               	movf	_arrayIndex,w
  1998  0D27  00F2               	movwf	??_neoArray
  1999  0D28  01F3               	clrf	??_neoArray+1
  2000  0D29  1BF2               	btfsc	??_neoArray,7
  2001  0D2A  03F3               	decf	??_neoArray+1,f
  2002  0D2B  0873               	movf	??_neoArray+1,w
  2003  0D2C  3A80               	xorlw	128
  2004  0D2D  00F4               	movwf	??_neoArray+2
  2005  0D2E  3080               	movlw	128
  2006  0D2F  0274               	subwf	??_neoArray+2,w
  2007  0D30  1D03               	skipz
  2008  0D31  2D34               	goto	u445
  2009  0D32  0879               	movf	neoArray@arraySize,w
  2010  0D33  0272               	subwf	??_neoArray,w
  2011  0D34                     u445:	
  2012  0D34  1803               	btfsc	3,0
  2013                           
  2014                           ;neopixel.c: 56: arrayIndex = 0;
  2015  0D35  01FD               	clrf	_arrayIndex
  2016                           
  2017                           ;neopixel.c: 58: int8_t tempIndex = arrayIndex;
  2018  0D36  087D               	movf	_arrayIndex,w
  2019  0D37  00F2               	movwf	??_neoArray
  2020  0D38  0872               	movf	??_neoArray,w
  2021  0D39  00F5               	movwf	neoArray@tempIndex
  2022  0D3A  0870               	movf	neoArray@leds,w
  2023  0D3B  1903               	btfsc	3,2
  2024  0D3C  2DA7               	goto	l1168
  2025  0D3D                     l1128:	
  2026                           
  2027                           ;neopixel.c: 64: {
  2028                           ;neopixel.c: 66: temp = greenArray[arrayIndex];
  2029  0D3D  087D               	movf	_arrayIndex,w
  2030  0D3E  3E20               	addlw	(low (_greenArray| 0))& (0+255)
  2031  0D3F  0086               	movwf	6
  2032  0D40  0187               	clrf	7
  2033  0D41  0801               	movf	1,w
  2034  0D42  00F2               	movwf	??_neoArray
  2035  0D43  0872               	movf	??_neoArray,w
  2036  0D44  0020               	movlb	0	; select bank0
  2037  0D45  00EA               	movwf	_temp
  2038                           
  2039                           ;neopixel.c: 67: for (uint8_t i = 8; i != 0; i--)
  2040  0D46  3008               	movlw	8
  2041  0D47  00F2               	movwf	??_neoArray
  2042  0D48  0872               	movf	??_neoArray,w
  2043  0D49  00F6               	movwf	neoArray@i
  2044  0D4A  0876               	movf	neoArray@i,w
  2045  0D4B  1903               	btfsc	3,2
  2046  0D4C  2D5A               	goto	l1138
  2047  0D4D                     l157:	
  2048  0D4D  140E               	bsf	270,0	;# 
  2049  0D4E  0000               	nop	;# 
  2050  0D4F  0000               	nop	;# 
  2051  0D50  1FEA               	btfss	_temp,7	;# 
  2052  0D51  100E               	bcf	270,0	;# 
  2053  0D52  0000               	nop	;# 
  2054  0D53  35EA               	lslf	_temp,f	;# 
  2055  0D54  100E               	bcf	270,0	;# 
  2056  0D55  3001               	movlw	1
  2057  0D56  02F6               	subwf	neoArray@i,f
  2058  0D57  0876               	movf	neoArray@i,w
  2059  0D58  1D03               	btfss	3,2
  2060  0D59  2D4D               	goto	l157
  2061  0D5A                     l1138:	
  2062                           
  2063                           ;neopixel.c: 77: }
  2064                           ;neopixel.c: 79: temp = redArray[arrayIndex];
  2065  0D5A  087D               	movf	_arrayIndex,w
  2066  0D5B  3E50               	addlw	(low (_redArray| 0))& (0+255)
  2067  0D5C  0086               	movwf	6
  2068  0D5D  0187               	clrf	7
  2069  0D5E  0801               	movf	1,w
  2070  0D5F  00F2               	movwf	??_neoArray
  2071  0D60  0872               	movf	??_neoArray,w
  2072  0D61  0020               	movlb	0	; select bank0
  2073  0D62  00EA               	movwf	_temp
  2074                           
  2075                           ;neopixel.c: 80: for (uint8_t i = 8; i !=0; i--)
  2076  0D63  3008               	movlw	8
  2077  0D64  00F2               	movwf	??_neoArray
  2078  0D65  0872               	movf	??_neoArray,w
  2079  0D66  00F7               	movwf	neoArray@i_113
  2080  0D67  0877               	movf	neoArray@i_113,w
  2081  0D68  1903               	btfsc	3,2
  2082  0D69  2D77               	goto	l1148
  2083  0D6A                     l159:	
  2084  0D6A  140E               	bsf	270,0	;# 
  2085  0D6B  0000               	nop	;# 
  2086  0D6C  0000               	nop	;# 
  2087  0D6D  1FEA               	btfss	_temp,7	;# 
  2088  0D6E  100E               	bcf	270,0	;# 
  2089  0D6F  0000               	nop	;# 
  2090  0D70  35EA               	lslf	_temp,f	;# 
  2091  0D71  100E               	bcf	270,0	;# 
  2092  0D72  3001               	movlw	1
  2093  0D73  02F7               	subwf	neoArray@i_113,f
  2094  0D74  0877               	movf	neoArray@i_113,w
  2095  0D75  1D03               	btfss	3,2
  2096  0D76  2D6A               	goto	l159
  2097  0D77                     l1148:	
  2098                           
  2099                           ;neopixel.c: 90: }
  2100                           ;neopixel.c: 92: temp = blueArray[arrayIndex];
  2101  0D77  087D               	movf	_arrayIndex,w
  2102  0D78  3E38               	addlw	(low (_blueArray| 0))& (0+255)
  2103  0D79  0086               	movwf	6
  2104  0D7A  0187               	clrf	7
  2105  0D7B  0801               	movf	1,w
  2106  0D7C  00F2               	movwf	??_neoArray
  2107  0D7D  0872               	movf	??_neoArray,w
  2108  0D7E  0020               	movlb	0	; select bank0
  2109  0D7F  00EA               	movwf	_temp
  2110                           
  2111                           ;neopixel.c: 93: for (uint8_t i = 8; i !=0; i--)
  2112  0D80  3008               	movlw	8
  2113  0D81  00F2               	movwf	??_neoArray
  2114  0D82  0872               	movf	??_neoArray,w
  2115  0D83  00F8               	movwf	neoArray@i_114
  2116  0D84  0878               	movf	neoArray@i_114,w
  2117  0D85  1903               	btfsc	3,2
  2118  0D86  2D94               	goto	l1158
  2119  0D87                     l161:	
  2120  0D87  140E               	bsf	270,0	;# 
  2121  0D88  0000               	nop	;# 
  2122  0D89  0000               	nop	;# 
  2123  0D8A  1FEA               	btfss	_temp,7	;# 
  2124  0D8B  100E               	bcf	270,0	;# 
  2125  0D8C  0000               	nop	;# 
  2126  0D8D  35EA               	lslf	_temp,f	;# 
  2127  0D8E  100E               	bcf	270,0	;# 
  2128  0D8F  3001               	movlw	1
  2129  0D90  02F8               	subwf	neoArray@i_114,f
  2130  0D91  0878               	movf	neoArray@i_114,w
  2131  0D92  1D03               	btfss	3,2
  2132  0D93  2D87               	goto	l161
  2133  0D94                     l1158:	
  2134                           
  2135                           ;neopixel.c: 103: }
  2136                           ;neopixel.c: 105: arrayIndex++;
  2137  0D94  3001               	movlw	1
  2138  0D95  00F2               	movwf	??_neoArray
  2139  0D96  0872               	movf	??_neoArray,w
  2140  0D97  07FD               	addwf	_arrayIndex,f
  2141                           
  2142                           ;neopixel.c: 106: if (arrayIndex == arraySize)
  2143  0D98  087D               	movf	_arrayIndex,w
  2144  0D99  00F2               	movwf	??_neoArray
  2145  0D9A  01F3               	clrf	??_neoArray+1
  2146  0D9B  1BF2               	btfsc	??_neoArray,7
  2147  0D9C  03F3               	decf	??_neoArray+1,f
  2148  0D9D  0879               	movf	neoArray@arraySize,w
  2149  0D9E  0672               	xorwf	??_neoArray,w
  2150  0D9F  0473               	iorwf	??_neoArray+1,w
  2151  0DA0  1903               	btfsc	3,2
  2152                           
  2153                           ;neopixel.c: 107: arrayIndex = 0;
  2154  0DA1  01FD               	clrf	_arrayIndex
  2155  0DA2  3001               	movlw	1
  2156  0DA3  02F0               	subwf	neoArray@leds,f
  2157  0DA4  0870               	movf	neoArray@leds,w
  2158  0DA5  1D03               	btfss	3,2
  2159  0DA6  2D3D               	goto	l1128
  2160  0DA7                     l1168:	
  2161                           
  2162                           ;neopixel.c: 108: }
  2163                           ;neopixel.c: 110: arrayIndex = tempIndex;
  2164  0DA7  0875               	movf	neoArray@tempIndex,w
  2165  0DA8  00F2               	movwf	??_neoArray
  2166  0DA9  0872               	movf	??_neoArray,w
  2167  0DAA  00FD               	movwf	_arrayIndex
  2168                           
  2169                           ;neopixel.c: 111: arrayIndex += offset;
  2170  0DAB  0871               	movf	neoArray@offset,w
  2171  0DAC  00F2               	movwf	??_neoArray
  2172  0DAD  0872               	movf	??_neoArray,w
  2173  0DAE  07FD               	addwf	_arrayIndex,f
  2174                           
  2175                           ;neopixel.c: 112: if (arrayIndex >= arraySize)
  2176  0DAF  087D               	movf	_arrayIndex,w
  2177  0DB0  00F2               	movwf	??_neoArray
  2178  0DB1  01F3               	clrf	??_neoArray+1
  2179  0DB2  1BF2               	btfsc	??_neoArray,7
  2180  0DB3  03F3               	decf	??_neoArray+1,f
  2181  0DB4  0873               	movf	??_neoArray+1,w
  2182  0DB5  3A80               	xorlw	128
  2183  0DB6  00F4               	movwf	??_neoArray+2
  2184  0DB7  3080               	movlw	128
  2185  0DB8  0274               	subwf	??_neoArray+2,w
  2186  0DB9  1D03               	skipz
  2187  0DBA  2DBD               	goto	u545
  2188  0DBB  0879               	movf	neoArray@arraySize,w
  2189  0DBC  0272               	subwf	??_neoArray,w
  2190  0DBD                     u545:	
  2191  0DBD  1803               	btfsc	3,0
  2192                           
  2193                           ;neopixel.c: 113: arrayIndex = 0;
  2194  0DBE  01FD               	clrf	_arrayIndex
  2195                           
  2196                           ;neopixel.c: 114: if (arrayIndex < 0)
  2197  0DBF  1FFD               	btfss	_arrayIndex,7
  2198  0DC0  0008               	return
  2199                           
  2200                           ;neopixel.c: 115: arrayIndex = arraySize - 1;
  2201  0DC1  0879               	movf	neoArray@arraySize,w
  2202  0DC2  3EFF               	addlw	-1
  2203  0DC3  00F2               	movwf	??_neoArray
  2204  0DC4  0872               	movf	??_neoArray,w
  2205  0DC5  00FD               	movwf	_arrayIndex
  2206  0DC6  0008               	return
  2207  0DC7                     __end_of_neoArray:	
  2208                           
  2209                           	psect	text4
  2210  0C50                     __ptext4:	
  2211 ;; *************** function _initPorts *****************
  2212 ;; Defined at:
  2213 ;;		line 25 in file "UBMP2.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;		None
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;		None
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      void 
  2220 ;; Registers used:
  2221 ;;		wreg, status,2
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2231 ;;Total ram usage:        0 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_main
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           
  2241                           ;psect for function _initPorts
  2242  0C50                     _initPorts:	
  2243                           
  2244                           ;UBMP2.c: 27: OPTION_REG = 0b01010111;
  2245                           
  2246                           ;incstack = 0
  2247                           ; Regs used in _initPorts: [wreg+status,2]
  2248  0C50  3057               	movlw	87
  2249  0C51  0021               	movlb	1	; select bank1
  2250  0C52  0095               	movwf	21	;volatile
  2251                           
  2252                           ;UBMP2.c: 29: LATA = 0b00000000;
  2253  0C53  0022               	movlb	2	; select bank2
  2254  0C54  018C               	clrf	12	;volatile
  2255                           
  2256                           ;UBMP2.c: 30: ANSELA = 0b00000000;
  2257  0C55  0023               	movlb	3	; select bank3
  2258  0C56  018C               	clrf	12	;volatile
  2259                           
  2260                           ;UBMP2.c: 31: TRISA = 0b00001111;
  2261  0C57  300F               	movlw	15
  2262  0C58  0021               	movlb	1	; select bank1
  2263  0C59  008C               	movwf	12	;volatile
  2264                           
  2265                           ;UBMP2.c: 33: LATB = 0b00000000;
  2266  0C5A  0022               	movlb	2	; select bank2
  2267  0C5B  018D               	clrf	13	;volatile
  2268                           
  2269                           ;UBMP2.c: 34: ANSELB = 0b00000000;
  2270  0C5C  0023               	movlb	3	; select bank3
  2271  0C5D  018D               	clrf	13	;volatile
  2272                           
  2273                           ;UBMP2.c: 35: TRISB = 0b11110000;
  2274  0C5E  30F0               	movlw	240
  2275  0C5F  0021               	movlb	1	; select bank1
  2276  0C60  008D               	movwf	13	;volatile
  2277                           
  2278                           ;UBMP2.c: 37: LATC = 0b00000000;
  2279  0C61  0022               	movlb	2	; select bank2
  2280  0C62  018E               	clrf	14	;volatile
  2281                           
  2282                           ;UBMP2.c: 38: ANSELC = 0b00000000;
  2283  0C63  0023               	movlb	3	; select bank3
  2284  0C64  018E               	clrf	14	;volatile
  2285                           
  2286                           ;UBMP2.c: 39: TRISC = 0b00001110;
  2287  0C65  300E               	movlw	14
  2288  0C66  0021               	movlb	1	; select bank1
  2289  0C67  008E               	movwf	14	;volatile
  2290  0C68  0008               	return
  2291  0C69                     __end_of_initPorts:	
  2292                           
  2293                           	psect	text5
  2294  0C46                     __ptext5:	
  2295 ;; *************** function _initOsc *****************
  2296 ;; Defined at:
  2297 ;;		line 16 in file "UBMP2.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2315 ;;Total ram usage:        0 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; This function calls:
  2318 ;;		Nothing
  2319 ;; This function is called by:
  2320 ;;		_main
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           
  2325                           ;psect for function _initOsc
  2326  0C46                     _initOsc:	
  2327                           
  2328                           ;UBMP2.c: 18: OSCCON = 0xFC;
  2329                           
  2330                           ;incstack = 0
  2331                           ; Regs used in _initOsc: [wreg]
  2332  0C46  30FC               	movlw	252
  2333  0C47  0021               	movlb	1	; select bank1
  2334  0C48  0099               	movwf	25	;volatile
  2335                           
  2336                           ;UBMP2.c: 19: ACTCON = 0x90;
  2337  0C49  3090               	movlw	144
  2338  0C4A  0027               	movlb	7	; select bank7
  2339  0C4B  009B               	movwf	27	;volatile
  2340  0C4C                     l35:	
  2341                           ;UBMP2.c: 20: while(!PLLRDY);
  2342                           
  2343  0C4C  0021               	movlb	1	; select bank1
  2344  0C4D  1B1A               	btfsc	26,6	;volatile
  2345  0C4E  0008               	return
  2346  0C4F  2C4C               	goto	l35
  2347  0C50                     __end_of_initOsc:	
  2348                           
  2349                           	psect	text6
  2350  0C9C                     __ptext6:	
  2351 ;; *************** function _fade *****************
  2352 ;; Defined at:
  2353 ;;		line 95 in file "main.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  arraySize       1    wreg     unsigned char 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;  arraySize       1   11[COMMON] unsigned char 
  2358 ;;  i               1   12[COMMON] unsigned char 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2369 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2370 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2371 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2372 ;;Total ram usage:        5 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; Hardware stack levels required when called:    1
  2375 ;; This function calls:
  2376 ;;		_neoRGB
  2377 ;; This function is called by:
  2378 ;;		_main
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           
  2383                           ;psect for function _fade
  2384  0C9C                     _fade:	
  2385                           
  2386                           ;incstack = 0
  2387                           ; Regs used in _fade: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2388                           ;fade@arraySize stored from wreg
  2389  0C9C  00FB               	movwf	fade@arraySize
  2390                           
  2391                           ;main.c: 98: for (uint8_t i = 0; i < arraySize; i++)
  2392  0C9D  01FC               	clrf	fade@i
  2393  0C9E                     l1106:	
  2394  0C9E  087B               	movf	fade@arraySize,w
  2395  0C9F  027C               	subwf	fade@i,w
  2396  0CA0  1803               	btfsc	3,0
  2397  0CA1  0008               	return
  2398                           
  2399                           ;main.c: 99: {
  2400                           ;main.c: 100: neoRGB(redArray[i], greenArray[i], blueArray[i], maxLEDs);
  2401  0CA2  087C               	movf	fade@i,w
  2402  0CA3  3E20               	addlw	(low (_greenArray| 0))& (0+255)
  2403  0CA4  0086               	movwf	6
  2404  0CA5  0187               	clrf	7
  2405  0CA6  0801               	movf	1,w
  2406  0CA7  00F8               	movwf	??_fade
  2407  0CA8  0878               	movf	??_fade,w
  2408  0CA9  00F0               	movwf	neoRGB@green
  2409  0CAA  087C               	movf	fade@i,w
  2410  0CAB  3E38               	addlw	(low (_blueArray| 0))& (0+255)
  2411  0CAC  0086               	movwf	6
  2412  0CAD  0187               	clrf	7
  2413  0CAE  0801               	movf	1,w
  2414  0CAF  00F9               	movwf	??_fade+1
  2415  0CB0  0879               	movf	??_fade+1,w
  2416  0CB1  00F1               	movwf	neoRGB@blue
  2417  0CB2  3000               	movlw	low (_maxLEDs| (0+32768))
  2418  0CB3  0084               	movwf	4
  2419  0CB4  3090               	movlw	high (_maxLEDs| (0+32768))
  2420  0CB5  0085               	movwf	5
  2421  0CB6  0800               	movf	0,w	;code access
  2422  0CB7  00FA               	movwf	??_fade+2
  2423  0CB8  087A               	movf	??_fade+2,w
  2424  0CB9  00F2               	movwf	neoRGB@leds
  2425  0CBA  087C               	movf	fade@i,w
  2426  0CBB  3E50               	addlw	(low (_redArray| 0))& (0+255)
  2427  0CBC  0086               	movwf	6
  2428  0CBD  0187               	clrf	7
  2429  0CBE  0801               	movf	1,w
  2430  0CBF  318C  24D3  318C   	fcall	_neoRGB
  2431                           
  2432                           ;main.c: 101: _delay((unsigned long)((45)*(48000000/4000.0)));
  2433  0CC2  3003               	movlw	3
  2434  0CC3  00F9               	movwf	??_fade+1
  2435  0CC4  30BE               	movlw	190
  2436  0CC5  00F8               	movwf	??_fade
  2437  0CC6  3048               	movlw	72
  2438  0CC7                     u717:	
  2439  0CC7  0B89               	decfsz	9,f
  2440  0CC8  2CC7               	goto	u717
  2441  0CC9  0BF8               	decfsz	??_fade,f
  2442  0CCA  2CC7               	goto	u717
  2443  0CCB  0BF9               	decfsz	??_fade+1,f
  2444  0CCC  2CC7               	goto	u717
  2445  0CCD  3200               	nop2
  2446  0CCE  3001               	movlw	1
  2447  0CCF  00F8               	movwf	??_fade
  2448  0CD0  0878               	movf	??_fade,w
  2449  0CD1  07FC               	addwf	fade@i,f
  2450  0CD2  2C9E               	goto	l1106
  2451  0CD3                     __end_of_fade:	
  2452                           
  2453                           	psect	text7
  2454  0CD3                     __ptext7:	
  2455 ;; *************** function _neoRGB *****************
  2456 ;; Defined at:
  2457 ;;		line 4 in file "neopixel.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  red             1    wreg     unsigned char 
  2460 ;;  green           1    0[COMMON] unsigned char 
  2461 ;;  blue            1    1[COMMON] unsigned char 
  2462 ;;  leds            1    2[COMMON] unsigned char 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;  red             1    4[COMMON] unsigned char 
  2465 ;;  i               1    7[COMMON] unsigned char 
  2466 ;;  i               1    6[COMMON] unsigned char 
  2467 ;;  i               1    5[COMMON] unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2477 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2478 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2480 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2481 ;;Total ram usage:        8 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_fade
  2487 ;;		_strobe
  2488 ;;		_main
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           
  2493                           ;psect for function _neoRGB
  2494  0CD3                     _neoRGB:	
  2495                           
  2496                           ;incstack = 0
  2497                           ; Regs used in _neoRGB: [wreg+status,2+status,0]
  2498                           ;neoRGB@red stored from wreg
  2499  0CD3  00F4               	movwf	neoRGB@red
  2500  0CD4                     L13:	
  2501  0CD4  0872               	movf	neoRGB@leds,w
  2502  0CD5  1903               	btfsc	3,2
  2503  0CD6  0008               	return
  2504                           
  2505                           ;neopixel.c: 8: {
  2506                           ;neopixel.c: 10: temp = green;
  2507  0CD7  0870               	movf	neoRGB@green,w
  2508  0CD8  00F3               	movwf	??_neoRGB
  2509  0CD9  0873               	movf	??_neoRGB,w
  2510  0CDA  0020               	movlb	0	; select bank0
  2511  0CDB  00EA               	movwf	_temp
  2512                           
  2513                           ;neopixel.c: 11: for (uint8_t i = 8; i != 0; i--)
  2514  0CDC  3008               	movlw	8
  2515  0CDD  00F3               	movwf	??_neoRGB
  2516  0CDE  0873               	movf	??_neoRGB,w
  2517  0CDF  00F5               	movwf	neoRGB@i
  2518  0CE0  0875               	movf	neoRGB@i,w
  2519  0CE1  1903               	btfsc	3,2
  2520  0CE2  2CF0               	goto	l930
  2521  0CE3                     l145:	
  2522  0CE3  140E               	bsf	270,0	;# 
  2523  0CE4  0000               	nop	;# 
  2524  0CE5  0000               	nop	;# 
  2525  0CE6  1FEA               	btfss	_temp,7	;# 
  2526  0CE7  100E               	bcf	270,0	;# 
  2527  0CE8  0000               	nop	;# 
  2528  0CE9  35EA               	lslf	_temp,f	;# 
  2529  0CEA  100E               	bcf	270,0	;# 
  2530  0CEB  3001               	movlw	1
  2531  0CEC  02F5               	subwf	neoRGB@i,f
  2532  0CED  0875               	movf	neoRGB@i,w
  2533  0CEE  1D03               	btfss	3,2
  2534  0CEF  2CE3               	goto	l145
  2535  0CF0                     l930:	
  2536                           
  2537                           ;neopixel.c: 21: }
  2538                           ;neopixel.c: 23: temp = red;
  2539  0CF0  0874               	movf	neoRGB@red,w
  2540  0CF1  00F3               	movwf	??_neoRGB
  2541  0CF2  0873               	movf	??_neoRGB,w
  2542  0CF3  0020               	movlb	0	; select bank0
  2543  0CF4  00EA               	movwf	_temp
  2544                           
  2545                           ;neopixel.c: 24: for (uint8_t i = 8; i !=0; i--)
  2546  0CF5  3008               	movlw	8
  2547  0CF6  00F3               	movwf	??_neoRGB
  2548  0CF7  0873               	movf	??_neoRGB,w
  2549  0CF8  00F6               	movwf	neoRGB@i_105
  2550  0CF9  0876               	movf	neoRGB@i_105,w
  2551  0CFA  1903               	btfsc	3,2
  2552  0CFB  2D09               	goto	l938
  2553  0CFC                     l147:	
  2554  0CFC  140E               	bsf	270,0	;# 
  2555  0CFD  0000               	nop	;# 
  2556  0CFE  0000               	nop	;# 
  2557  0CFF  1FEA               	btfss	_temp,7	;# 
  2558  0D00  100E               	bcf	270,0	;# 
  2559  0D01  0000               	nop	;# 
  2560  0D02  35EA               	lslf	_temp,f	;# 
  2561  0D03  100E               	bcf	270,0	;# 
  2562  0D04  3001               	movlw	1
  2563  0D05  02F6               	subwf	neoRGB@i_105,f
  2564  0D06  0876               	movf	neoRGB@i_105,w
  2565  0D07  1D03               	btfss	3,2
  2566  0D08  2CFC               	goto	l147
  2567  0D09                     l938:	
  2568                           
  2569                           ;neopixel.c: 34: }
  2570                           ;neopixel.c: 36: temp = blue;
  2571  0D09  0871               	movf	neoRGB@blue,w
  2572  0D0A  00F3               	movwf	??_neoRGB
  2573  0D0B  0873               	movf	??_neoRGB,w
  2574  0D0C  0020               	movlb	0	; select bank0
  2575  0D0D  00EA               	movwf	_temp
  2576                           
  2577                           ;neopixel.c: 37: for (uint8_t i = 8; i !=0; i--)
  2578  0D0E  3008               	movlw	8
  2579  0D0F  00F3               	movwf	??_neoRGB
  2580  0D10  0873               	movf	??_neoRGB,w
  2581  0D11  00F7               	movwf	neoRGB@i_106
  2582  0D12  0877               	movf	neoRGB@i_106,w
  2583  0D13  1903               	btfsc	3,2
  2584  0D14  2D22               	goto	l946
  2585  0D15                     l149:	
  2586  0D15  140E               	bsf	270,0	;# 
  2587  0D16  0000               	nop	;# 
  2588  0D17  0000               	nop	;# 
  2589  0D18  1FEA               	btfss	_temp,7	;# 
  2590  0D19  100E               	bcf	270,0	;# 
  2591  0D1A  0000               	nop	;# 
  2592  0D1B  35EA               	lslf	_temp,f	;# 
  2593  0D1C  100E               	bcf	270,0	;# 
  2594  0D1D  3001               	movlw	1
  2595  0D1E  02F7               	subwf	neoRGB@i_106,f
  2596  0D1F  0877               	movf	neoRGB@i_106,w
  2597  0D20  1D03               	btfss	3,2
  2598  0D21  2D15               	goto	l149
  2599  0D22                     l946:	
  2600  0D22  3001               	movlw	1
  2601  0D23  02F2               	subwf	neoRGB@leds,f
  2602  0D24  2CD4               	goto	L13
  2603  0D25                     __end_of_neoRGB:	
  2604  007E                     btemp	set	126	;btemp
  2605  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    1
    Data        0
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      3      78
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_fade
    _main->_strobe
    _strobe->_neoRGB
    _fade->_neoRGB

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8244
                                              0 BANK0      3     3      0
                               _fade
                            _initOsc
                          _initPorts
                           _neoArray
                             _neoRGB
                            _rainbow
                             _strobe
 ---------------------------------------------------------------------------------
 (1) _strobe                                               5     5      0    2167
                                              8 COMMON     5     5      0
                             _neoRGB
 ---------------------------------------------------------------------------------
 (1) _rainbow                                              4     4      0    1367
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _neoArray                                            10     8      2     488
                                              0 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fade                                                 5     5      0    2167
                                              8 COMMON     5     5      0
                             _neoRGB
 ---------------------------------------------------------------------------------
 (2) _neoRGB                                               8     5      3    2055
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fade
     _neoRGB
   _initOsc
   _initPorts
   _neoArray
   _neoRGB
   _rainbow
   _strobe
     _neoRGB

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      5C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      5C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jun 19 20:19:18 2018

                      pc 0002              __CFG_CP$OFF 0000                       l35 0C4C  
                    LATC 010E                      l145 0CE3                      l161 0D87  
                    l147 0CFC                      l149 0D15                      l157 0D4D  
            neoRGB@i_105 0076                      l159 0D6A              neoRGB@i_106 0077  
                    l930 0CF0                      l946 0D22                      l938 0D09  
                    _RA3 0063                      _RB4 006C                      _RB5 006D  
                    _RB6 006E                      u445 0D34                      u545 0DBD  
                    u570 0EE3                      u707 0C92                      u580 0EE4  
                    u717 0CC7                      u657 0ED6                      u667 0EED  
                    u677 0F07                      u687 0F21                      u697 0FE9  
           __CFG_BORV$LO 0000              neoRGB@green 0070                      wreg 0009  
                   S1284 0C09             __CFG_LVP$OFF 0000                     l1200 0EFD  
                   l1106 0C9E                     l1210 0F19                     l1202 0F01  
                   l1116 0C6B                     l1220 0F37                     l1212 0F1B  
                   l1204 0F0E                     l1230 0F50                     l1222 0F39  
                   l1214 0F28                     l1128 0D3D                     l1240 0FA0  
                   l1232 0F61                     l1224 0F3B                     l1138 0D5A  
                   l1242 0FAF                     l1234 0F6F                     l1226 0F42  
                   l1218 0F2D                     l1250 0FC9                     l1148 0D77  
                   l1244 0FBF                     l1236 0F7F                     l1228 0F49  
                   l1252 0FD5                     l1158 0D94                     l1246 0FC4  
                   l1238 0F8D                     l1254 0FE3                     l1168 0DA7  
                   l1194 0EF4                     l1188 0EDB                     _LATA 010C  
                   _LATB 010D                     _LATC 010E             __CFG_WRT$OFF 0000  
                   _fade 0C9C                     _isOn 0068                     _main 0EC2  
                   _mode 0069                     _temp 006A                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0C07            __CFG_IESO$OFF 0000  
                  ?_fade 0070                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
          __CFG_PWRTE$ON 0000           __CFG_FCMEN$OFF 0000          __end_of_maxLEDs 1001  
                  fade@i 007C          __end_of_initOsc 0C50          __end_of_rainbow 0EC2  
        strobe@arraySize 007B                    status 0003                    wtemp0 007E  
         __CFG_MCLRE$OFF 0000          __initialization 0FF5             __end_of_fade 0CD3  
           __end_of_main 0FF5           __CFG_LPBOR$OFF 0000            rainbow@eighth 0073  
                 ??_fade 0078                   ??_main 006B      __CFG_USBLSCLK$48MHz 0000  
                 _ADCON0 009D                   _ADCON1 009E                   _ADCON2 009F  
                 _ACTCON 039B                   _ANSELA 018C                   _ANSELB 018D  
                 _ANSELC 018E                   _OSCCON 0099                   _PLLRDY 04D6  
         __CFG_STVREN$ON 0000         __end_of_neoArray 0DC7                   _neoRGB 0CD3  
                 _strobe 0C69                ??_initOsc 0070                ??_rainbow 0070  
           neoArray@leds 0070  __end_of__initialization 0FFD           __pcstackCOMMON 0070  
            rainbow@half 0071               __pbssBANK0 0020           rainbow@quarter 0072  
     __size_of_initPorts 0019               __pmaintext 0EC2          __CFG_PLLMULT$3x 0000  
                ?_neoRGB 0070                  ?_strobe 0070               _arrayIndex 007D  
              ?_neoArray 0070               _greenArray 0020        neoArray@arraySize 0079  
        __size_of_neoRGB 0052                  __ptext1 0C69                  __ptext2 0DC7  
                __ptext3 0D25                  __ptext4 0C50                  __ptext5 0C46  
                __ptext6 0C9C                  __ptext7 0CD3                  _maxLEDs 1000  
        __size_of_strobe 0033        __end_of_initPorts 0C69                  _initOsc 0C46  
                _rainbow 0DC7                  neoRGB@i 0075                  clrloop0 0C41  
   end_of_initialization 0FFD               ??_neoArray 0072        neoArray@tempIndex 0075  
          neoArray@i_113 0077            neoArray@i_114 0078                  strobe@i 007C  
       __CFG_FOSC$INTOSC 0000               neoRGB@blue 0071               neoRGB@leds 0072  
     __CFG_PLLEN$ENABLED 0000           __end_of_neoRGB 0D25           __end_of_strobe 0C9C  
    start_initialization 0FF5                 ??_neoRGB 0073                 ??_strobe 0078  
            __pbssCOMMON 007D                ___latbits 0002            __pcstackBANK0 006B  
      __size_of_neoArray 00A2                _blueArray 0038                __pswtext1 0C09  
               ?_initOsc 0070                 ?_rainbow 0070                _initPorts 0C50  
              clear_ram0 0C40                neoRGB@red 0074               ?_initPorts 0070  
              neoArray@i 0076         __size_of_initOsc 000A         __size_of_rainbow 00FB  
               _neoArray 0D25                 _redArray 0050            __size_of_fade 0037  
          __size_of_main 0133            fade@arraySize 007B              ??_initPorts 0070  
      __CFG_CLKOUTEN$OFF 0000           neoArray@offset 0071     __CFG_CPUDIV$NOCLKDIV 0000  
          __pstringtext1 1000               _OPTION_REG 0095  
